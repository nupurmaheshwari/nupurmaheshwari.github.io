{"ast":null,"code":"var _jsxFileName = \"/Users/nupurmaheshwari/Documents/react/pokertest/src/villain.js\";\nimport React from 'react'; //import ReactDOM from 'react-dom';\n\nimport CustomButton from './customButton';\nimport './index.css';\nimport * as constant from './stringConstants';\n\nclass Hero extends React.Component {\n  constructor() {\n    super(); // submitValue holds the value of clicked button in villain row\n\n    this.mappy = {\n      [constant.UTG]: \"hello\",\n      [constant.MP]: this._custombutton2,\n      [constant.LJ]: this._custombutton3,\n      [constant.HJ]: this._custombutton4,\n      [constant.CO]: this._custombutton5,\n      [constant.BU]: this._custombutton6,\n      [constant.SB]: this._custombutton7,\n      [constant.BB]: this._custombutton8\n    };\n\n    this.onFormSubmit = evt => {\n      evt.preventDefault();\n      console.log(this.state.submitValue);\n    };\n\n    this.handleClick = ev => {\n      console.log(\"MAPPPPPPPPY: \", this.mappy);\n      this.props.vToggleButtons(ev, this.mappy); // update state of value in parents class bumfuck\n\n      this.props.updateVillainState(ev.currentTarget.value); // update state of submitValue in this class (for use in form submission)\n\n      this.setState({\n        submitValue: ev.currentTarget.value\n      }); //this.props.vSendData(this.state.submitValue)\n    };\n\n    this.state = {\n      submitValue: ''\n    };\n  }\n\n  componentDidUpdate(props) {\n    // listButtons is an array of BvB row buttons \n    let allButtons = [this._custombutton, this._custombutton2, this._custombutton3, this._custombutton4, this._custombutton5, this._custombutton6, this._custombutton7, this._custombutton8];\n    let listButtonsVsopen = [this._custombutton, this._custombutton2, this._custombutton3, this._custombutton4, this._custombutton5, this._custombutton6];\n    let listButtonsVs3 = [this._custombutton2, this._custombutton3, this._custombutton4, this._custombutton5, this._custombutton6, this._custombutton7, this._custombutton8]; // loop through each button and disable or enable based on what PotType value is\n\n    if (this.props.potValue === constant.RFI || this.props.potValue === constant.BVB) {\n      for (let butt = 0; butt < listButtons.length; butt++) {\n        let button = listButtons[butt]; // disable button\n\n        button.disabled(); // unclick button\n\n        button.clickedOff();\n      }\n    } else if (this.props.potValue === constant.VS_OPEN) {\n      // initial grey out\n      // disable and unclick last two buttons when vs open clicked\n      this._custombutton7.clickedOff();\n\n      this._custombutton7.disabled();\n\n      this._custombutton8.clickedOff();\n\n      this._custombutton8.disabled(); // enable all other buttons \n\n\n      for (let butt = 0; butt < listButtonsVsopen.length; butt++) {\n        let button = listButtonsVsopen[butt];\n        button.enabled();\n      } // grey out based on VP<HP rule\n      // check if hero button has been selected\n\n\n      if (this.props.heroValue !== '') {\n        // find what position clicked hero button is at in array of buttons\n        console.log(\"HERO VALUE \", this.props.heroValue);\n        var hpIndex = allButtons.indexOf(this.props.heroValue); // click off and disable all villain buttons before that hero index\n\n        for (let butt = 0; butt < hpIndex; butt++) {\n          let button = allButtons[butt];\n          button.clickedOff();\n          button.disable();\n        } // enable all villain buttons after that hero index\n\n\n        for (let butt = hpIndex; butt < listButtons.length; butt++) {\n          console.log(\"INDEX: \", hpIndex); // let button = listButtons[butt]\n          // button.enabled()\n        }\n      }\n    } else if (this.props.potValue === constant.VS_3) {\n      // disable and unclick first button when vs open clicked\n      this._custombutton.clickedOff();\n\n      this._custombutton.disabled(); // enable all other buttons \n\n\n      for (let butt = 0; butt < listButtonsVs3.length; butt++) {\n        let button = listButtonsVs3[butt];\n        button.enabled();\n      }\n    }\n  } // <input type='submit' />\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onFormSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      value: constant.UTG,\n      onClick: ev => this.handleClick(ev),\n      ref: ref => this._custombutton = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(CustomButton, {\n      value: constant.MP,\n      onClick: ev => this.handleClick(ev),\n      ref: ref => this._custombutton2 = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(CustomButton, {\n      value: constant.LJ,\n      onClick: ev => this.handleClick(ev),\n      ref: ref => this._custombutton3 = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(CustomButton, {\n      value: constant.HJ,\n      onClick: ev => this.handleClick(ev),\n      ref: ref => this._custombutton4 = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(CustomButton, {\n      value: constant.CO,\n      onClick: ev => this.handleClick(ev),\n      ref: ref => this._custombutton5 = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(CustomButton, {\n      value: constant.BU,\n      onClick: ev => this.handleClick(ev),\n      ref: ref => this._custombutton6 = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(CustomButton, {\n      value: constant.SB,\n      onClick: ev => this.handleClick(ev),\n      ref: ref => this._custombutton7 = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(CustomButton, {\n      value: constant.BB,\n      onClick: ev => this.handleClick(ev),\n      ref: ref => this._custombutton8 = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default Hero;","map":{"version":3,"sources":["/Users/nupurmaheshwari/Documents/react/pokertest/src/villain.js"],"names":["React","CustomButton","constant","Hero","Component","constructor","mappy","UTG","MP","_custombutton2","LJ","_custombutton3","HJ","_custombutton4","CO","_custombutton5","BU","_custombutton6","SB","_custombutton7","BB","_custombutton8","onFormSubmit","evt","preventDefault","console","log","state","submitValue","handleClick","ev","props","vToggleButtons","updateVillainState","currentTarget","value","setState","componentDidUpdate","allButtons","_custombutton","listButtonsVsopen","listButtonsVs3","potValue","RFI","BVB","butt","listButtons","length","button","disabled","clickedOff","VS_OPEN","enabled","heroValue","hpIndex","indexOf","disable","VS_3","render","ref"],"mappings":"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","sourcesContent":["import React from 'react';\n//import ReactDOM from 'react-dom';\nimport CustomButton from './customButton';\nimport './index.css';\nimport * as constant from './stringConstants';\n\n\nclass Hero extends React.Component {\n\n\tmappy = {[constant.UTG]: \"hello\", [constant.MP]: this._custombutton2, [constant.LJ]:  this._custombutton3, [constant.HJ]: this._custombutton4, \n\t\t\t[constant.CO]: this._custombutton5, [constant.BU]: this._custombutton6, [constant.SB]:  this._custombutton7, [constant.BB]: this._custombutton8}\n\n\tconstructor() {\n\t\tsuper();\n\n\t\t// submitValue holds the value of clicked button in villain row\n\t\tthis.state = {\n\t\t\tsubmitValue : ''\n\t\t}\n\t}\n\n\n\tonFormSubmit = (evt) => {\n\t    evt.preventDefault();\n\t    console.log(this.state.submitValue);\n  \t};\n\n\n\thandleClick = ev => { \n\t\tconsole.log(\"MAPPPPPPPPY: \", this.mappy)\n\t\tthis.props.vToggleButtons(ev, this.mappy)\n\n\t\t// update state of value in parents class bumfuck\n\t\tthis.props.updateVillainState(ev.currentTarget.value)\n\t\t// update state of submitValue in this class (for use in form submission)\n\t\tthis.setState ({submitValue: ev.currentTarget.value})\n\t\t//this.props.vSendData(this.state.submitValue)\n\t}\n\n\n\tcomponentDidUpdate(props) {\n\t\t// listButtons is an array of BvB row buttons \n\t\tlet allButtons = [this._custombutton, this._custombutton2, this._custombutton3, this._custombutton4, \n\t\t\tthis._custombutton5, this._custombutton6, this._custombutton7, this._custombutton8]\n\t\tlet listButtonsVsopen = [this._custombutton, this._custombutton2, this._custombutton3, this._custombutton4, \n\t\t\tthis._custombutton5, this._custombutton6]\n\t\tlet listButtonsVs3 = [this._custombutton2, this._custombutton3, this._custombutton4, \n\t\t\tthis._custombutton5, this._custombutton6, this._custombutton7, this._custombutton8]\n\n\t\t// loop through each button and disable or enable based on what PotType value is\n\t\tif ((this.props.potValue === constant.RFI) || (this.props.potValue === constant.BVB)) {\n\t\t\tfor (let butt = 0; butt < listButtons.length; butt++) {\n\t\t\t\tlet button = listButtons[butt]\n\t\t\t\t// disable button\n\t\t\t\tbutton.disabled()\n\t\t\t\t// unclick button\n\t\t\t\tbutton.clickedOff()\n\t\t\t}\n\t\t}\n\t\telse if (this.props.potValue === constant.VS_OPEN) {\n\t\t\t// initial grey out\n\t\t\t// disable and unclick last two buttons when vs open clicked\n\t\t\tthis._custombutton7.clickedOff()\n\t\t\tthis._custombutton7.disabled()\n\t\t\tthis._custombutton8.clickedOff()\n\t\t\tthis._custombutton8.disabled()\n\t\t\t// enable all other buttons \n\t\t\tfor (let butt = 0; butt < listButtonsVsopen.length; butt++) {\n\t\t\t\tlet button = listButtonsVsopen[butt]\n\t\t\t\tbutton.enabled()\n\t\t\t}\n\n\t\t\t// grey out based on VP<HP rule\n\t\t\t// check if hero button has been selected\n\t\t\tif (this.props.heroValue !== '') {\n\t\t\t\t// find what position clicked hero button is at in array of buttons\n\t\t\t\tconsole.log(\"HERO VALUE \", this.props.heroValue)\n\t\t\t\tvar hpIndex = allButtons.indexOf(this.props.heroValue);\n\t\t\t\t// click off and disable all villain buttons before that hero index\n\t\t\t\tfor (let butt = 0; butt < hpIndex; butt++) {\n\t\t\t\t\tlet button = allButtons[butt]\n\t\t\t\t\tbutton.clickedOff()\n\t\t\t\t\tbutton.disable()\n\t\t\t\t}\n\t\t\t\t// enable all villain buttons after that hero index\n\t\t\t\tfor (let butt = hpIndex; butt < listButtons.length; butt++) {\n\t\t\t\t\tconsole.log(\"INDEX: \", hpIndex)\n\t\t\t\t\t// let button = listButtons[butt]\n\t\t\t\t\t// button.enabled()\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t}\n\t\telse if (this.props.potValue === constant.VS_3) {\n\t\t\t// disable and unclick first button when vs open clicked\n\t\t\tthis._custombutton.clickedOff()\n\t\t\tthis._custombutton.disabled()\n\t\t\t// enable all other buttons \n\t\t\tfor (let butt = 0; butt < listButtonsVs3.length; butt++) {\n\t\t\t\tlet button = listButtonsVs3[butt]\n\t\t\t\tbutton.enabled()\n\t\t\t}\n\t\t}\n\t}\n\n\t// <input type='submit' />\n\n\trender() {\n\n\t    return (\n\t      \t<div>\n\t       \t\t<form onSubmit={this.onFormSubmit}>\n\t        \t\t<div className=\"board-row\">\n\t\t\t        \t<CustomButton value={constant.UTG} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.MP} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton2 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.LJ} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton3 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.HJ} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton4 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.CO} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton5 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.BU} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton6 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.SB} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton7 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.BB} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton8 = ref)} ></CustomButton>\n\t        \t\t</div>\n\t        \t</form>\n\t      \t</div>\n\t    );\n\t}\n}\n\n\nexport default Hero;\n"]},"metadata":{},"sourceType":"module"}