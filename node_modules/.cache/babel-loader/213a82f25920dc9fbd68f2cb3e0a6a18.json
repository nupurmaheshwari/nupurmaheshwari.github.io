{"ast":null,"code":"var _jsxFileName = \"/Users/nupurmaheshwari/Documents/react/pokertest/src/index.js\";\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import * as serviceWorker from './serviceWorker';\n// // ReactDOM.render(\n// //   <React.StrictMode>\n// //     <App />\n// //   </React.StrictMode>,\n// //   document.getElementById('root')\n// // );\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Button from '@material-ui/core/Button';\n\nclass Test extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleButtonClicked = ev => {\n      console.log({\n        // Retrieve a passed parameter 'value' attribute\n        message: `Button ${ev.currentTarget.value} clicked`\n      });\n    };\n\n    this.state = {\n      value: 'hello'\n    };\n  }\n\n  handleInput(e) {\n    console.log(e.value);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"LOL\",\n      onClick: e => this.handleInput(e, \"value\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      value: \"HELOOOOOOOO\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 8\n      }\n    }, \"IAMBUTTON\"));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(Test, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/nupurmaheshwari/Documents/react/pokertest/src/index.js"],"names":["React","ReactDOM","Button","Test","Component","constructor","props","handleButtonClicked","ev","console","log","message","currentTarget","value","state","handleInput","e","render","document","getElementById"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAGA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AAElCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACZ,UAAMA,KAAN;;AADY,SAYnBC,mBAZmB,GAYGC,EAAE,IAAI;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAY;AACV;AACAC,QAAAA,OAAO,EAAG,UAASH,EAAE,CAACI,aAAH,CAAiBC,KAAM;AAFhC,OAAZ;AAIF,KAjBkB;;AAGb,SAAKC,KAAL,GAAa;AACZD,MAAAA,KAAK,EAAE;AADK,KAAb;AAGF;;AAEJE,EAAAA,WAAW,CAACC,CAAD,EAAI;AACXP,IAAAA,OAAO,CAACC,GAAR,CAAYM,CAAC,CAACH,KAAd;AACH;;AAUDI,EAAAA,MAAM,GAAG;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAqB,MAAA,OAAO,EAAED,CAAC,IAAI,KAAKD,WAAL,CAAiBC,CAAjB,EAAoB,OAApB,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,SAAlC;AAA4C,MAAA,KAAK,EAAC,aAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD,CADF;AAOF;;AA9BiC;;AAkCnCf,QAAQ,CAACgB,MAAT,eAAgB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAA0BC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA1B","sourcesContent":["// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import * as serviceWorker from './serviceWorker';\n\n// // ReactDOM.render(\n// //   <React.StrictMode>\n// //     <App />\n// //   </React.StrictMode>,\n// //   document.getElementById('root')\n// // );\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Button from '@material-ui/core/Button';\n\n\nclass Test extends React.Component {\n\n\tconstructor(props) {\n        super(props);\n\n      \tthis.state = {\n      \t\tvalue: 'hello'\n      \t};\n    }\n\t\n\thandleInput(e) {\n\t    console.log(e.value);\n\t}\n\n\thandleButtonClicked = ev => {\n  \t\tconsole.log({\n    \t\t// Retrieve a passed parameter 'value' attribute\n    \t\tmessage: `Button ${ev.currentTarget.value} clicked`\n  \t\t});\n\t};\n\n\n\trender() {\n\t  \treturn (\n\t    \t<div className=\"LOL\" onClick={e => this.handleInput(e, \"value\")}>\n\t\t    \t<Button variant=\"contained\" color=\"primary\" value=\"HELOOOOOOOO\">\n\t\t      \t\tIAMBUTTON\n\t\t    \t</Button>\n\t    \t</div>\n\t  \t);\n\t}\n\n}\n\nReactDOM.render(<Test />, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}