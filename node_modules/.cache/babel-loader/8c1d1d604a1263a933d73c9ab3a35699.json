{"ast":null,"code":"var _jsxFileName = \"/Users/nupurmaheshwari/Documents/react/pokertest/src/villain.js\";\nimport React from 'react'; //import ReactDOM from 'react-dom';\n\nimport CustomButton from './customButton';\nimport './index.css';\nimport * as constant from './stringConstants';\n\nclass Hero extends React.Component {\n  constructor() {\n    super(); // submitValue holds the value of clicked button in villain row\n\n    this.onFormSubmit = evt => {\n      evt.preventDefault();\n      console.log(this.state.submitValue);\n    };\n\n    this.handleClick = ev => {\n      this.props.vToggleButtons(ev, this.mappy); // update state of value in parents class bumfuck\n\n      this.props.updateVillainState(ev.currentTarget.value); // update state of submitValue in this class (for use in form submission)\n\n      this.setState({\n        submitValue: ev.currentTarget.value\n      }); //this.props.vSendData(this.state.submitValue)\n    };\n\n    this.state = {\n      submitValue: ''\n    };\n    this.mappy = {\n      [constant.UTG]: this._custombutton,\n      [constant.MP]: this._custombutton2,\n      [constant.LJ]: this._custombutton3,\n      [constant.HJ]: this._custombutton4,\n      [constant.CO]: this._custombutton5,\n      [constant.BU]: this._custombutton6,\n      [constant.SB]: this._custombutton7,\n      [constant.BB]: this._custombutton8\n    };\n  }\n\n  componentDidUpdate(props) {\n    // listButtons is an array of BvB row buttons \n    let listButtons = [this._custombutton, this._custombutton2, this._custombutton3, this._custombutton4, this._custombutton5, this._custombutton6, this._custombutton7, this._custombutton8];\n    let listButtonsVsopen = [this._custombutton, this._custombutton2, this._custombutton3, this._custombutton4, this._custombutton5, this._custombutton6];\n    let listButtonsVs3 = [this._custombutton2, this._custombutton3, this._custombutton4, this._custombutton5, this._custombutton6, this._custombutton7, this._custombutton8]; // loop through each button and disable or enable based on what PotType value is\n\n    if (this.props.potValue === constant.RFI || this.props.potValue === constant.BVB) {\n      for (let butt = 0; butt < listButtons.length; butt++) {\n        let button = listButtons[butt]; // disable button\n\n        button.disabled(); // unclick button\n\n        button.clickedOff();\n      }\n    } // else if (this.props.potValue === constant.VS_OPEN) {\n    // \t// initial grey out\n    // \t// disable and unclick last two buttons when vs open clicked\n    // \tthis._custombutton7.clickedOff()\n    // \tthis._custombutton7.disabled()\n    // \tthis._custombutton8.clickedOff()\n    // \tthis._custombutton8.disabled()\n    // \t// enable all other buttons \n    // \tfor (let butt = 0; butt < listButtonsVsopen.length; butt++) {\n    // \t\tlet button = listButtonsVsopen[butt]\n    // \t\tbutton.enabled()\n    // \t}\n    // \t// grey out based on VP<HP rule\n    // \t// check if hero button has been selected\n    // \tif (this.props.heroValue !== '') {\n    // \t\t// find what position clicked hero button is at in array of buttons\n    // \t\tconsole.log(\"HERO VALUE \", this.props.heroValue)\n    // \t\tvar hpIndex = listButtons.indexOf(this.props.heroValue);\n    // \t\t// click off and disable all villain buttons before that hero index\n    // \t\tfor (let butt = 0; butt < hpIndex; butt++) {\n    // \t\t\tlet button = listButtons[butt]\n    // \t\t\tbutton.clickedOff()\n    // \t\t\tbutton.disable()\n    // \t\t}\n    // \t\t// enable all villain buttons after that hero index\n    // \t\tfor (let butt = hpIndex; butt < listButtons.length; butt++) {\n    // \t\t\tconsole.log(\"INDEX: \", hpIndex)\n    // \t\t\t// let button = listButtons[butt]\n    // \t\t\t// button.enabled()\n    // \t\t}\n    // \t}\n    // }\n    else if (this.props.potValue === constant.VS_3) {\n        // disable and unclick first button when vs open clicked\n        this._custombutton.clickedOff();\n\n        this._custombutton.disabled(); // enable all other buttons \n\n\n        for (let butt = 0; butt < listButtonsVs3.length; butt++) {\n          let button = listButtonsVs3[butt];\n          button.enabled();\n        }\n      }\n  } // <input type='submit' />\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onFormSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      value: constant.UTG,\n      onClick: ev => this.handleClick(ev),\n      ref: ref => this._custombutton = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(CustomButton, {\n      value: constant.MP,\n      onClick: ev => this.handleClick(ev),\n      ref: ref => this._custombutton2 = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(CustomButton, {\n      value: constant.LJ,\n      onClick: ev => this.handleClick(ev),\n      ref: ref => this._custombutton3 = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(CustomButton, {\n      value: constant.HJ,\n      onClick: ev => this.handleClick(ev),\n      ref: ref => this._custombutton4 = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(CustomButton, {\n      value: constant.CO,\n      onClick: ev => this.handleClick(ev),\n      ref: ref => this._custombutton5 = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(CustomButton, {\n      value: constant.BU,\n      onClick: ev => this.handleClick(ev),\n      ref: ref => this._custombutton6 = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(CustomButton, {\n      value: constant.SB,\n      onClick: ev => this.handleClick(ev),\n      ref: ref => this._custombutton7 = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(CustomButton, {\n      value: constant.BB,\n      onClick: ev => this.handleClick(ev),\n      ref: ref => this._custombutton8 = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default Hero;","map":{"version":3,"sources":["/Users/nupurmaheshwari/Documents/react/pokertest/src/villain.js"],"names":["React","CustomButton","constant","Hero","Component","constructor","onFormSubmit","evt","preventDefault","console","log","state","submitValue","handleClick","ev","props","vToggleButtons","mappy","updateVillainState","currentTarget","value","setState","UTG","_custombutton","MP","_custombutton2","LJ","_custombutton3","HJ","_custombutton4","CO","_custombutton5","BU","_custombutton6","SB","_custombutton7","BB","_custombutton8","componentDidUpdate","listButtons","listButtonsVsopen","listButtonsVs3","potValue","RFI","BVB","butt","length","button","disabled","clickedOff","VS_3","enabled","render","ref"],"mappings":"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","sourcesContent":["import React from 'react';\n//import ReactDOM from 'react-dom';\nimport CustomButton from './customButton';\nimport './index.css';\nimport * as constant from './stringConstants';\n\n\nclass Hero extends React.Component {\n\n\tconstructor() {\n\t\tsuper();\n\n\t\t// submitValue holds the value of clicked button in villain row\n\t\tthis.state = {\n\t\t\tsubmitValue : ''\n\t\t}\n\t\tthis.mappy = {[constant.UTG]: this._custombutton, [constant.MP]: this._custombutton2, [constant.LJ]:  this._custombutton3, [constant.HJ]: this._custombutton4, \n\t\t\t[constant.CO]: this._custombutton5, [constant.BU]: this._custombutton6, [constant.SB]:  this._custombutton7, [constant.BB]: this._custombutton8}\n\t}\n\n\n\tonFormSubmit = (evt) => {\n\t    evt.preventDefault();\n\t    console.log(this.state.submitValue);\n  \t};\n\n\n\thandleClick = ev => { \n\t\tthis.props.vToggleButtons(ev, this.mappy)\n\n\t\t// update state of value in parents class bumfuck\n\t\tthis.props.updateVillainState(ev.currentTarget.value)\n\t\t// update state of submitValue in this class (for use in form submission)\n\t\tthis.setState ({submitValue: ev.currentTarget.value})\n\t\t//this.props.vSendData(this.state.submitValue)\n\t}\n\n\n\tcomponentDidUpdate(props) {\n\t\t// listButtons is an array of BvB row buttons \n\t\tlet listButtons = [this._custombutton, this._custombutton2, this._custombutton3, this._custombutton4, \n\t\t\tthis._custombutton5, this._custombutton6, this._custombutton7, this._custombutton8]\n\n\t\tlet listButtonsVsopen = [this._custombutton, this._custombutton2, this._custombutton3, this._custombutton4, \n\t\t\tthis._custombutton5, this._custombutton6]\n\n\t\tlet listButtonsVs3 = [this._custombutton2, this._custombutton3, this._custombutton4, \n\t\t\tthis._custombutton5, this._custombutton6, this._custombutton7, this._custombutton8]\n\n\t\t// loop through each button and disable or enable based on what PotType value is\n\t\tif ((this.props.potValue === constant.RFI) || (this.props.potValue === constant.BVB)) {\n\t\t\tfor (let butt = 0; butt < listButtons.length; butt++) {\n\t\t\t\tlet button = listButtons[butt]\n\t\t\t\t// disable button\n\t\t\t\tbutton.disabled()\n\t\t\t\t// unclick button\n\t\t\t\tbutton.clickedOff()\n\t\t\t}\n\t\t}\n\t\t// else if (this.props.potValue === constant.VS_OPEN) {\n\t\t// \t// initial grey out\n\t\t// \t// disable and unclick last two buttons when vs open clicked\n\t\t// \tthis._custombutton7.clickedOff()\n\t\t// \tthis._custombutton7.disabled()\n\t\t// \tthis._custombutton8.clickedOff()\n\t\t// \tthis._custombutton8.disabled()\n\t\t// \t// enable all other buttons \n\t\t// \tfor (let butt = 0; butt < listButtonsVsopen.length; butt++) {\n\t\t// \t\tlet button = listButtonsVsopen[butt]\n\t\t// \t\tbutton.enabled()\n\t\t// \t}\n\n\t\t// \t// grey out based on VP<HP rule\n\t\t// \t// check if hero button has been selected\n\t\t// \tif (this.props.heroValue !== '') {\n\t\t// \t\t// find what position clicked hero button is at in array of buttons\n\t\t// \t\tconsole.log(\"HERO VALUE \", this.props.heroValue)\n\t\t// \t\tvar hpIndex = listButtons.indexOf(this.props.heroValue);\n\t\t// \t\t// click off and disable all villain buttons before that hero index\n\t\t// \t\tfor (let butt = 0; butt < hpIndex; butt++) {\n\t\t// \t\t\tlet button = listButtons[butt]\n\t\t// \t\t\tbutton.clickedOff()\n\t\t// \t\t\tbutton.disable()\n\t\t// \t\t}\n\t\t// \t\t// enable all villain buttons after that hero index\n\t\t// \t\tfor (let butt = hpIndex; butt < listButtons.length; butt++) {\n\t\t// \t\t\tconsole.log(\"INDEX: \", hpIndex)\n\t\t// \t\t\t// let button = listButtons[butt]\n\t\t// \t\t\t// button.enabled()\n\t\t// \t\t}\n\t\t// \t}\n\t\t\n\t\t// }\n\t\telse if (this.props.potValue === constant.VS_3) {\n\t\t\t// disable and unclick first button when vs open clicked\n\t\t\tthis._custombutton.clickedOff()\n\t\t\tthis._custombutton.disabled()\n\t\t\t// enable all other buttons \n\t\t\tfor (let butt = 0; butt < listButtonsVs3.length; butt++) {\n\t\t\t\tlet button = listButtonsVs3[butt]\n\t\t\t\tbutton.enabled()\n\t\t\t}\n\t\t}\n\t}\n\n\t// <input type='submit' />\n\n\trender() {\n\n\t    return (\n\t      \t<div>\n\t       \t\t<form onSubmit={this.onFormSubmit}>\n\t        \t\t<div className=\"board-row\">\n\t\t\t        \t<CustomButton value={constant.UTG} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.MP} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton2 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.LJ} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton3 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.HJ} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton4 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.CO} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton5 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.BU} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton6 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.SB} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton7 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.BB} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton8 = ref)} ></CustomButton>\n\t        \t\t</div>\n\t        \t</form>\n\t      \t</div>\n\t    );\n\t}\n}\n\n\nexport default Hero;\n"]},"metadata":{},"sourceType":"module"}