{"ast":null,"code":"var _jsxFileName = \"/Users/nupurmaheshwari/Documents/poker/pokertest/src/villain.js\";\nimport React from 'react'; //import ReactDOM from 'react-dom';\n\nimport CustomButton from './customButton';\nimport './index.css';\nimport * as constant from './stringConstants';\n\nclass Hero extends React.Component {\n  constructor() {\n    super(); // submitValue holds the value of clicked button in villain row\n\n    this.handleClick = ev => {\n      let mappy = {\n        [constant.UTG]: this._custombutton,\n        [constant.MP]: this._custombutton2,\n        [constant.LJ]: this._custombutton3,\n        [constant.HJ]: this._custombutton4,\n        [constant.CO]: this._custombutton5,\n        [constant.BU]: this._custombutton6,\n        [constant.SB]: this._custombutton7,\n        [constant.BB]: this._custombutton8\n      };\n      this.props.vToggleButtons(ev, mappy); // update state of value in parents class bumfuck\n\n      this.props.updateVillainState(ev.currentTarget.value); // update state of submitValue in this class (for use in form submission)\n\n      this.setState({\n        submitValue: ev.currentTarget.value\n      }); //this.props.vSendData(this.state.submitValue)\n    };\n\n    this.state = {\n      submitValue: ''\n    };\n  }\n\n  componentDidUpdate(props) {\n    // allVillainButtons is a dictionary of villain row buttons \n    let allVillainButtons = {\n      [constant.UTG]: this._custombutton,\n      [constant.MP]: this._custombutton2,\n      [constant.LJ]: this._custombutton3,\n      [constant.HJ]: this._custombutton4,\n      [constant.CO]: this._custombutton5,\n      [constant.BU]: this._custombutton6,\n      [constant.SB]: this._custombutton7,\n      [constant.BB]: this._custombutton8\n    };\n    let vsOpenButtons = { ...allVillainButtons\n    };\n    delete vsOpenButtons[constant.SB];\n    delete vsOpenButtons[constant.BB];\n    let vs3Buttons = { ...allVillainButtons\n    };\n    delete vs3Buttons[constant.UTG]; // loop through each button and disable or enable based on what PotType value is\n\n    if (this.props.potValue === constant.RFI || this.props.potValue === constant.BVB) {\n      for (var value0 in allVillainButtons) {\n        let button = allVillainButtons[value0]; // disable button\n\n        button.disabled(); // unclick button\n\n        button.clickedOff();\n      }\n    } else if (this.props.potValue === constant.VS_OPEN) {\n      // initial grey out\n      // disable last two buttons when vs open clicked\n      this._custombutton7.disabled();\n\n      this._custombutton8.disabled(); // enable all other buttons \n\n\n      for (var value1 in vsOpenButtons) {\n        let button = vsOpenButtons[value1];\n        button.enabled();\n      } // grey out based on VP<HP rule\n      // check if hero button has been selected\n\n\n      if (this.props.heroValue !== '') {\n        // variable to check if VP button is < HP button\n        let beforeHero = true; // loop through vsOpenButtons dictionary\n\n        for (var value2 in vsOpenButtons) {\n          // if villain key is equal to clicked hero button, change variable to false\n          if (value2 === this.props.heroValue) {\n            beforeHero = false;\n          }\n\n          let button = vsOpenButtons[value2]; //if VP button<HP button, and enable button\n\n          if (beforeHero === true) {\n            button.enabled();\n          } // if VP button>=HP button, disable button\n          else {\n              button.disabled();\n            }\n        }\n      }\n    } else if (this.props.potValue === constant.VS_3) {\n      // disable first button when vs open clicked\n      this._custombutton.disabled(); // enable all other buttons \n\n\n      for (var value4 in vs3Buttons) {\n        let button = vs3Buttons[value4];\n        button.enabled();\n      } // grey out based on HP<VP rule\n      // check if hero button has been selected\n\n\n      if (this.props.heroValue !== '') {\n        // variable to check if VP button is > HP button\n        let afterHero = true; // if clicked hero button is equal to UTG change variable to false\n\n        if (this.props.heroValue === constant.UTG) {\n          afterHero = false;\n        } // loop through allButtons dictionary\n\n\n        for (var value5 in vs3Buttons) {\n          let button = vs3Buttons[value5]; // if HP button>VP button, enable button\n\n          if (afterHero === true) {\n            button.disabled();\n          } else {\n            //if HP button<=VP button, enable button\n            button.enabled();\n          } // if villain key is equal to clicked hero button, change variable to false\n\n\n          if (value5 === this.props.heroValue) {\n            afterHero = false;\n          }\n        }\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onFormSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      value: constant.UTG,\n      onClick: ev => this.handleClick(ev),\n      ref: ref => this._custombutton = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(CustomButton, {\n      value: constant.MP,\n      onClick: ev => this.handleClick(ev),\n      ref: ref => this._custombutton2 = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(CustomButton, {\n      value: constant.LJ,\n      onClick: ev => this.handleClick(ev),\n      ref: ref => this._custombutton3 = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(CustomButton, {\n      value: constant.HJ,\n      onClick: ev => this.handleClick(ev),\n      ref: ref => this._custombutton4 = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(CustomButton, {\n      value: constant.CO,\n      onClick: ev => this.handleClick(ev),\n      ref: ref => this._custombutton5 = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(CustomButton, {\n      value: constant.BU,\n      onClick: ev => this.handleClick(ev),\n      ref: ref => this._custombutton6 = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(CustomButton, {\n      value: constant.SB,\n      onClick: ev => this.handleClick(ev),\n      ref: ref => this._custombutton7 = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(CustomButton, {\n      value: constant.BB,\n      onClick: ev => this.handleClick(ev),\n      ref: ref => this._custombutton8 = ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default Hero;","map":{"version":3,"sources":["/Users/nupurmaheshwari/Documents/poker/pokertest/src/villain.js"],"names":["React","CustomButton","constant","Hero","Component","constructor","handleClick","ev","mappy","UTG","_custombutton","MP","_custombutton2","LJ","_custombutton3","HJ","_custombutton4","CO","_custombutton5","BU","_custombutton6","SB","_custombutton7","BB","_custombutton8","props","vToggleButtons","updateVillainState","currentTarget","value","setState","submitValue","state","componentDidUpdate","allVillainButtons","vsOpenButtons","vs3Buttons","potValue","RFI","BVB","value0","button","disabled","clickedOff","VS_OPEN","value1","enabled","heroValue","beforeHero","value2","VS_3","value4","afterHero","value5","render","onFormSubmit","ref"],"mappings":"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","sourcesContent":["import React from 'react';\n//import ReactDOM from 'react-dom';\nimport CustomButton from './customButton';\nimport './index.css';\nimport * as constant from './stringConstants';\n\n\nclass Hero extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\t// submitValue holds the value of clicked button in villain row\n\t\tthis.state = {\n\t\t\tsubmitValue : ''\n\t\t}\n\t}\n\n\n\thandleClick = ev => { \n\t\tlet mappy = {[constant.UTG]: this._custombutton, [constant.MP]: this._custombutton2, [constant.LJ]:  this._custombutton3, [constant.HJ]: this._custombutton4, \n\t\t\t[constant.CO]: this._custombutton5, [constant.BU]: this._custombutton6, [constant.SB]:  this._custombutton7, [constant.BB]: this._custombutton8}\n\n\t\tthis.props.vToggleButtons(ev, mappy)\n\n\t\t// update state of value in parents class bumfuck\n\t\tthis.props.updateVillainState(ev.currentTarget.value)\n\t\t// update state of submitValue in this class (for use in form submission)\n\t\tthis.setState ({submitValue: ev.currentTarget.value})\n\t\t//this.props.vSendData(this.state.submitValue)\n\t}\n\n\n\tcomponentDidUpdate(props) {\n\t\t// allVillainButtons is a dictionary of villain row buttons \n\t\tlet allVillainButtons = {[constant.UTG]: this._custombutton, [constant.MP]: this._custombutton2, [constant.LJ]:  this._custombutton3, [constant.HJ]: this._custombutton4, \n\t\t\t[constant.CO]: this._custombutton5, [constant.BU]: this._custombutton6, [constant.SB]:  this._custombutton7, [constant.BB]: this._custombutton8}\n\n\t\tlet vsOpenButtons = {...allVillainButtons} \n\t\tdelete vsOpenButtons[constant.SB]\n\t\tdelete vsOpenButtons[constant.BB]\n\n\t\tlet vs3Buttons = {...allVillainButtons}\n\t\tdelete vs3Buttons[constant.UTG]\n\t\t\n\n\t\t// loop through each button and disable or enable based on what PotType value is\n\t\tif ((this.props.potValue === constant.RFI) || (this.props.potValue === constant.BVB)) {\n\t\t\tfor (var value0 in allVillainButtons) {\n\t\t\t\tlet button = allVillainButtons[value0]\n\t\t\t\t// disable button\n\t\t\t\tbutton.disabled()\n\t\t\t\t// unclick button\n\t\t\t\tbutton.clickedOff()\n\t\t\t}\n\t\t}\n\t\telse if (this.props.potValue === constant.VS_OPEN) {\n\t\t\t// initial grey out\n\t\t\t// disable last two buttons when vs open clicked\n\t\t\tthis._custombutton7.disabled()\n\t\t\tthis._custombutton8.disabled()\n\t\t\t// enable all other buttons \n\t\t\tfor (var value1 in vsOpenButtons) {\n\t\t\t\tlet button = vsOpenButtons[value1]\n\t\t\t\tbutton.enabled()\n\t\t\t}\n\n\t\t\t// grey out based on VP<HP rule\n\t\t\t// check if hero button has been selected\n\t\t\tif (this.props.heroValue !== '') {\n\t\t\t\t// variable to check if VP button is < HP button\n\t\t\t\tlet beforeHero = true\n\t\t\t\t// loop through vsOpenButtons dictionary\n\t\t\t\tfor (var value2 in vsOpenButtons) {\n\t\t\t\t\t// if villain key is equal to clicked hero button, change variable to false\n\t\t\t\t\tif (value2 === this.props.heroValue) {beforeHero = false}\n\t\t\t\t\tlet button = vsOpenButtons[value2]\n\t\t\t\t\t//if VP button<HP button, and enable button\n\t\t\t\t\tif (beforeHero === true) {\n\t\t\t\t\t\tbutton.enabled()\n\t\t\t\t\t}\n\t\t\t\t\t// if VP button>=HP button, disable button\n\t\t\t\t\telse {\n\t\t\t\t\t\tbutton.disabled()\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t}\n\t\telse if (this.props.potValue === constant.VS_3) {\n\t\t\t// disable first button when vs open clicked\n\t\t\tthis._custombutton.disabled()\n\t\t\t// enable all other buttons \n\t\t\tfor (var value4 in vs3Buttons) {\n\t\t\t\tlet button = vs3Buttons[value4]\n\t\t\t\tbutton.enabled()\n\t\t\t}\n\t\t\t// grey out based on HP<VP rule\n\t\t\t// check if hero button has been selected\n\t\t\tif (this.props.heroValue !== '') {\n\t\t\t\t// variable to check if VP button is > HP button\n\t\t\t\tlet afterHero = true\n\t\t\t\t// if clicked hero button is equal to UTG change variable to false\n\t\t\t\tif (this.props.heroValue === constant.UTG) {afterHero = false}\n\t\t\t\t// loop through allButtons dictionary\n\t\t\t\tfor (var value5 in vs3Buttons) {\n\t\t\t\t\tlet button = vs3Buttons[value5]\n\t\t\t\t\t// if HP button>VP button, enable button\n\t\t\t\t\tif (afterHero === true) {\n\t\t\t\t\t\tbutton.disabled()\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t//if HP button<=VP button, enable button\n\t\t\t\t\t\tbutton.enabled()\n\t\t\t\t\t}\n\t\t\t\t\t// if villain key is equal to clicked hero button, change variable to false\n\t\t\t\t\tif (value5 === this.props.heroValue) {afterHero = false}\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\trender() {\n\n\t    return (\n\t      \t<div>\n\t       \t\t<form onSubmit={this.onFormSubmit}>\n\t        \t\t<div className=\"board-row\">\n\t\t\t        \t<CustomButton value={constant.UTG} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.MP} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton2 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.LJ} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton3 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.HJ} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton4 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.CO} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton5 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.BU} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton6 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.SB} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton7 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.BB} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton8 = ref)} ></CustomButton>\n\t        \t\t</div>\n\t        \t</form>\n\t      \t</div>\n\t    );\n\t}\n}\n\n\nexport default Hero;\n"]},"metadata":{},"sourceType":"module"}