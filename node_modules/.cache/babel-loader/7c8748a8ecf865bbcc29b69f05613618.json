{"ast":null,"code":"var _jsxFileName = \"/Users/nupurmaheshwari/Documents/Misc/poker/pokertest/src/bumfuck.js\";\nimport React from 'react'; //import ReactDOM from 'react-dom';\n//import Button from '@material-ui/core/Button';\n//import CustomButton from './customButton';\n\nimport SubmitButton from './submitButton';\nimport RefreshButton from './refreshButton';\nimport PotType from './pottype';\nimport StackDepth from './stackDepth';\nimport Hero from './hero';\nimport Villain from './villain';\nimport BvB from './bvb';\nimport HoleInput from './holeinput';\nimport Result from './result';\nexport default class BumFuck extends React.Component {\n  constructor() {\n    super(); // submitValue holds the value of clicked button in pottype row\n\n    this.state = {\n      potValue: '',\n      stackValue: '',\n      heroValue: '',\n      villainValue: '',\n      bvbValue: '',\n      holeValue: '',\n      //\n      action: 'action...'\n    };\n    this.updatePotValue = this.updatePotValue.bind(this);\n    this.updateStackValue = this.updateStackValue.bind(this);\n    this.updateHeroValue = this.updateHeroValue.bind(this);\n    this.updateVillainValue = this.updateVillainValue.bind(this);\n    this.updateBvbValue = this.updateBvbValue.bind(this);\n    this.updateHoleValue = this.updateHoleValue.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this); //\n\n    this.validHoleValue = this.validHoleValue.bind(this);\n  } // setState forces rerender so buttons update with each click\n\n\n  updatePotValue(val) {\n    this.setState({\n      potValue: val\n    });\n  }\n\n  updateStackValue(val) {\n    this.setState({\n      stackValue: val\n    });\n  }\n\n  updateHeroValue(val) {\n    this.setState({\n      heroValue: val\n    });\n  }\n\n  updateVillainValue(val) {\n    this.setState({\n      villainValue: val\n    });\n  }\n\n  updateBvbValue(val) {\n    this.setState({\n      bvbValue: val\n    });\n  }\n\n  updateHoleValue(val) {\n    this.setState({\n      holeValue: val\n    });\n  } //\n\n\n  validHoleValue(val) {\n    this.setState({\n      holeValid: val\n    });\n  } // helper function called in every class's handleClick, allowing user to toggle between buttons\n  // mappy = map of values to buttons (defined in handleclick)\n  // ev = event state\n\n\n  toggleButtons(ev, mappy) {\n    for (var key in mappy) {\n      let button = mappy[key];\n\n      if (key === ev.currentTarget.value) {\n        button.clickedOn();\n      } else {\n        button.clickedOff();\n      }\n    }\n  } // upon submitting, value of action field should change and log of all values selected should appear\n\n\n  handleSubmit() {\n    if (this.state.holeValid === \"true\") {\n      var final_array = [this.state.potValue, this.state.stackValue, this.state.heroValue, this.state.villainValue, this.state.bvbValue, this.state.holeValue];\n      console.log(final_array);\n      this.setState({\n        action: \"Raise 2.3x\"\n      });\n    } else {\n      this.setState({\n        action: \"Lol u thot\"\n      });\n    }\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // created new div \"final row\" for styling purposes\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 5\n        }\n      }, \"POT TYPE\"), /*#__PURE__*/React.createElement(PotType, {\n        pToggleButtons: this.toggleButtons,\n        updatePotState: this.updatePotValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 5\n        }\n      }, \"STACK DEPTH\"), /*#__PURE__*/React.createElement(StackDepth, {\n        sToggleButtons: this.toggleButtons,\n        updateStackState: this.updateStackValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 5\n        }\n      }, \"HERO\"), /*#__PURE__*/React.createElement(Hero, {\n        hToggleButtons: this.toggleButtons,\n        updateHeroState: this.updateHeroValue,\n        villainValue: this.state.villainValue,\n        potValue: this.state.potValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 5\n        }\n      }, \"VILLAIN\"), /*#__PURE__*/React.createElement(Villain, {\n        vToggleButtons: this.toggleButtons,\n        updateVillainState: this.updateVillainValue,\n        heroValue: this.state.heroValue,\n        potValue: this.state.potValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 5\n        }\n      }, \"BVB\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"bvbRow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(BvB, {\n        bToggleButtons: this.toggleButtons,\n        updateBvbState: this.updateBvbValue,\n        heroValue: this.state.heroValue,\n        potValue: this.state.potValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 6\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"finalRow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(HoleInput, {\n        potValue: this.state.potValue,\n        updateHoleState: this.updateHoleValue,\n        validHoleInput: this.validHoleValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 6\n        }\n      }), /*#__PURE__*/React.createElement(SubmitButton, {\n        submitState: this.submitState,\n        handleSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 6\n        }\n      }), /*#__PURE__*/React.createElement(RefreshButton, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 6\n        }\n      }), /*#__PURE__*/React.createElement(Result, {\n        finalResult: this.state.action,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 6\n        }\n      })))\n    );\n  }\n\n}","map":{"version":3,"sources":["/Users/nupurmaheshwari/Documents/Misc/poker/pokertest/src/bumfuck.js"],"names":["React","SubmitButton","RefreshButton","PotType","StackDepth","Hero","Villain","BvB","HoleInput","Result","BumFuck","Component","constructor","state","potValue","stackValue","heroValue","villainValue","bvbValue","holeValue","action","updatePotValue","bind","updateStackValue","updateHeroValue","updateVillainValue","updateBvbValue","updateHoleValue","handleSubmit","validHoleValue","val","setState","holeValid","toggleButtons","ev","mappy","key","button","currentTarget","value","clickedOn","clickedOff","final_array","console","log","render","submitState"],"mappings":"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","sourcesContent":["import React from 'react';\n//import ReactDOM from 'react-dom';\n//import Button from '@material-ui/core/Button';\n//import CustomButton from './customButton';\nimport SubmitButton from './submitButton';\nimport RefreshButton from './refreshButton';\n\n\nimport PotType from './pottype';\nimport StackDepth from './stackDepth';\nimport Hero from './hero';\nimport Villain from './villain';\nimport BvB from './bvb';\nimport HoleInput from './holeinput';\nimport Result from './result';\n\n\n\nexport default class BumFuck extends React.Component {\n\n\tconstructor() {\n        super();\n\n        // submitValue holds the value of clicked button in pottype row\n        this.state = {\n\t\t\tpotValue: '',\n\t\t\tstackValue : '',\n\t\t\theroValue : '',\n\t\t\tvillainValue : '',\n\t\t\tbvbValue : '',\n\t\t\tholeValue : '',\n\t\t\t//\n\t\t\taction : 'action...',\n        }\n        this.updatePotValue = this.updatePotValue.bind(this);\n        this.updateStackValue = this.updateStackValue.bind(this);\n        this.updateHeroValue = this.updateHeroValue.bind(this);\n        this.updateVillainValue = this.updateVillainValue.bind(this);\n        this.updateBvbValue = this.updateBvbValue.bind(this);\n        this.updateHoleValue = this.updateHoleValue.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\t\t  //\n\t\t  this.validHoleValue = this.validHoleValue.bind(this);\n    }\n\n\t // setState forces rerender so buttons update with each click\n   updatePotValue(val) {\n    \tthis.setState ({potValue: val})\n\t}\n\tupdateStackValue(val) {\n    \tthis.setState ({stackValue: val})\n\t}\n\tupdateHeroValue(val) {\n    \tthis.setState ({heroValue: val})\n\t}\n\tupdateVillainValue(val) {\n    \tthis.setState ({villainValue: val})\n\t}\n\tupdateBvbValue(val) {\n    \tthis.setState ({bvbValue: val})\n\t}\n\tupdateHoleValue(val) {\n    \tthis.setState ({holeValue: val})\n\t}\n\t//\n\tvalidHoleValue(val) {\n\t\tthis.setState ({holeValid: val})\n\t}\n\n\t// helper function called in every class's handleClick, allowing user to toggle between buttons\n\t// mappy = map of values to buttons (defined in handleclick)\n\t// ev = event state\n\ttoggleButtons(ev, mappy) {\n\t\tfor (var key in mappy) {\n\t\t\tlet button = mappy[key]\n\t\t\tif (key === ev.currentTarget.value) {\n\t\t\t\tbutton.clickedOn()\n\t\t \t}\n\t\t \telse {\n\t\t \t\tbutton.clickedOff()\n\t\t \t}\n\t\t}\n\t}\n\n\n\t// upon submitting, value of action field should change and log of all values selected should appear\n\thandleSubmit() {\n\t\tif (this.state.holeValid === \"true\") {\n\t\t\tvar final_array = [this.state.potValue, this.state.stackValue, this.state.heroValue,\n\t\t\tthis.state.villainValue, this.state.bvbValue, this.state.holeValue]\n\n\t\t\tconsole.log(final_array)\n\n\t\t\tthis.setState ({action: \"Raise 2.3x\"})\n\t\t}\n\t\telse {\n\t\t\tthis.setState ({action: \"Lol u thot\"})\n\t\t}\n\t}\n\n\n\n\trender() {\n\t\treturn (\n\t\t\t// created new div \"final row\" for styling purposes\n\t\t\t<div>\n\t\t\t\t<h5>POT TYPE</h5>\n\t\t\t\t<PotType pToggleButtons={this.toggleButtons} updatePotState={this.updatePotValue}/>\n\n\t\t\t\t<h5>STACK DEPTH</h5>\n\t\t\t\t<StackDepth sToggleButtons={this.toggleButtons} updateStackState={this.updateStackValue} />\n\n\t\t\t\t<h5>HERO</h5>\n\t\t\t\t<Hero hToggleButtons={this.toggleButtons} updateHeroState={this.updateHeroValue} villainValue={this.state.villainValue} potValue={this.state.potValue}/>\n\n\t\t\t\t<h5>VILLAIN</h5>\n\t\t\t\t<Villain vToggleButtons={this.toggleButtons} updateVillainState={this.updateVillainValue} heroValue={this.state.heroValue} potValue={this.state.potValue}/>\n\n\t\t\t\t<h5>BVB</h5>\n\n\t\t\t\t<div className = \"bvbRow\">\n\t\t\t\t\t<BvB bToggleButtons={this.toggleButtons} updateBvbState={this.updateBvbValue} heroValue={this.state.heroValue} potValue={this.state.potValue}/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className = \"finalRow\">\n\t\t\t\t\t<HoleInput potValue={this.state.potValue} updateHoleState={this.updateHoleValue} validHoleInput={this.validHoleValue}/>\n\t\t\t\t\t<SubmitButton submitState={this.submitState} handleSubmit={this.handleSubmit}/>\n\t\t\t\t\t<RefreshButton/>\n\t\t\t\t\t<Result finalResult={this.state.action}/>\n\t\t\t\t</div>\n\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}