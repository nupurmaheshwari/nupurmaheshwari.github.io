{"ast":null,"code":"import _classCallCheck from\"/Users/nupurmaheshwari/Documents/Poker/GitHub/nupurmaheshwari.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/nupurmaheshwari/Documents/Poker/GitHub/nupurmaheshwari.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/nupurmaheshwari/Documents/Poker/GitHub/nupurmaheshwari.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/nupurmaheshwari/Documents/Poker/GitHub/nupurmaheshwari.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/nupurmaheshwari/Documents/Poker/GitHub/nupurmaheshwari.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';var Calculator=/*#__PURE__*/function(_React$Component){_inherits(Calculator,_React$Component);var _super=_createSuper(Calculator);function Calculator(){var _this;_classCallCheck(this,Calculator);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={firstVal:'',secondVal:'',operator:'',display:'0'};_this.keypressHandler=function(ev){var _assertThisInitialize=_assertThisInitialized(_this),setNumberValue=_assertThisInitialize.setNumberValue,setOperatorValue=_assertThisInitialize.setOperatorValue,equalHandler=_assertThisInitialize.equalHandler,allClear=_assertThisInitialize.allClear,deleteChar=_assertThisInitialize.deleteChar;var _this$state=_this.state,operator=_this$state.operator,secondVal=_this$state.secondVal;var numRegex=/^([0-9]|\\.)*$/g;var opRegex=/[+|\\-|:|*]/g;var eqRegex=/(=)/g;var delRegex=/(Backspace|Delete)/g;var acRegex=/(Escape)/g;var key=ev.key;var isNumber=!!numRegex.exec(key);var isOperator=!!opRegex.exec(key);var isEqual=!!eqRegex.exec(key);var isDel=!!delRegex.exec(key);var isAc=!!acRegex.exec(key);if(key&&isNumber){setNumberValue(key+'');}if(key&&isOperator){setOperatorValue(key+'');}if(key&&isEqual){equalHandler();}if(key&&isDel){deleteChar();}if(key&&isAc){allClear();}};_this.resetState=function(resetAll){if(resetAll){_this.setState({firstVal:'',secondVal:'',operator:'',display:'0'});}else{_this.setState({firstVal:'',secondVal:'',operator:''});}};_this.hasPoint=function(value){return value.indexOf('.')>-1;};_this.setNumberValue=function(value){var _this$state2=_this.state,firstVal=_this$state2.firstVal,secondVal=_this$state2.secondVal,operator=_this$state2.operator;var _assertThisInitialize2=_assertThisInitialized(_this),fixNumberString=_assertThisInitialize2.fixNumberString,setDisplay=_assertThisInitialize2.setDisplay;var total;// if point is pressed, check if we already have it in current states\nif(value==='.'){if(!operator&&!_this.hasPoint(firstVal)){total=fixNumberString(firstVal+value);_this.setState({firstVal:total});}if(!!operator&&!_this.hasPoint(secondVal)){total=fixNumberString(secondVal+value);_this.setState({secondVal:total});}if(total){setDisplay(total+'');}return;}// if input is a number, check if it's first or second number\nif(!operator){total=fixNumberString(firstVal+value);_this.setState({firstVal:total});}else{total=fixNumberString(secondVal+value);_this.setState({secondVal:total});}setDisplay(total+'');};_this.getOverall=function(){var _this$state3=_this.state,firstVal=_this$state3.firstVal,secondVal=_this$state3.secondVal,operator=_this$state3.operator;return firstVal+' '+operator+' '+secondVal;};_this.setDisplay=function(value){var _this$state4=_this.state,firstVal=_this$state4.firstVal,secondVal=_this$state4.secondVal;_this.setState({display:value});};_this.getCurrentTargetValue=function(){var _this$state5=_this.state,firstVal=_this$state5.firstVal,secondVal=_this$state5.secondVal,operator=_this$state5.operator;return!operator?firstVal:secondVal;};_this.numberClickHandler=function(e){var value=e.target.innerHTML;if(value){_this.setNumberValue(value);}};_this.setOperatorValue=function(operatorInput){var _this$state6=_this.state,firstVal=_this$state6.firstVal,secondVal=_this$state6.secondVal,operator=_this$state6.operator,display=_this$state6.display;var _assertThisInitialize3=_assertThisInitialized(_this),fixNumberString=_assertThisInitialize3.fixNumberString,calculate=_assertThisInitialize3.calculate,setDisplay=_assertThisInitialize3.setDisplay;var fixedNumber=fixNumberString(firstVal,false);if(firstVal&&!secondVal){_this.setState({operator:operatorInput,display:fixedNumber});}else if(firstVal&&operator&&secondVal){var total=calculate();_this.setState({operator:operatorInput,firstVal:total+'',secondVal:''});setDisplay(total+'');}else{_this.setState({operator:operatorInput,firstVal:fixNumberString(display,false)});}};_this.operatorClickHandler=function(e){var _assertThisInitialize4=_assertThisInitialized(_this),setOperatorValue=_assertThisInitialize4.setOperatorValue;var operatorInput=e.target.innerHTML;setOperatorValue(operatorInput);};_this.allClear=function(){_this.resetState(true);};_this.deleteChar=function(){var _this$state7=_this.state,firstVal=_this$state7.firstVal,secondVal=_this$state7.secondVal,operator=_this$state7.operator;var opRegex=/[+|\\-|:|*]/g;if(!operator){var newVal=firstVal.slice(0,-1);_this.setState({firstVal:newVal,display:newVal?newVal:'0'});}else if(operator&&!secondVal){_this.setState({display:firstVal,operator:''});}else{var _newVal=secondVal.slice(0,-1);_this.setState({secondVal:_newVal,display:_newVal?_newVal:'0'});}};_this.removeZeroAtStart=function(value){return value.indexOf('0')===0?value.substring(1):value;};_this.fixNumberString=function(value){var finalize=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;// if input has hanging point e.g. '0.'/'1.', add trailing zero\n// should only run when moving to second value / begin calculation\nif(finalize&&value.indexOf('.')===value.length-1&&value.length>1){return value+'0';}// if value has zero prefix but not a decimal value, e.g. '01'/'03', remove zero\nif(value.indexOf('0')===0&&!value.indexOf('0.')===0){return value.substring(1);}// if value is a first point input '.', add zero prefix\nif(value.indexOf('.')===0&&value.length===1){return'0.';}if(!value){return'0';}return value;};_this.calculate=function(){var _this$state8=_this.state,firstVal=_this$state8.firstVal,secondVal=_this$state8.secondVal,operator=_this$state8.operator;var _assertThisInitialize5=_assertThisInitialized(_this),fixNumberString=_assertThisInitialize5.fixNumberString;var vfirstVal=fixNumberString(firstVal,true);var vsecondVal=fixNumberString(secondVal,true);var total='0';switch(operator){case'-':total=parseFloat(vfirstVal)-parseFloat(vsecondVal);break;case'*':total=parseFloat(vfirstVal)*parseFloat(vsecondVal);break;case':':total=parseFloat(vfirstVal)/parseFloat(vsecondVal);break;case'+':default:total=parseFloat(vfirstVal)+parseFloat(vsecondVal);break;}return total.toLocaleString();};_this.equalHandler=function(){var _this$state9=_this.state,firstVal=_this$state9.firstVal,secondVal=_this$state9.secondVal,operator=_this$state9.operator;var _assertThisInitialize6=_assertThisInitialized(_this),setDisplay=_assertThisInitialize6.setDisplay,resetState=_assertThisInitialize6.resetState,calculate=_assertThisInitialize6.calculate;if(firstVal&&secondVal&&operator){var total=calculate();setDisplay(total+'');resetState();}};return _this;}_createClass(Calculator,[{key:\"componentDidMount\",value:function componentDidMount(){var keypressHandler=this.keypressHandler;document.addEventListener('keyup',function(ev){keypressHandler(ev);});}},{key:\"render\",value:function render(){var _this$state10=this.state,display=_this$state10.display,operator=_this$state10.operator;var operatorClickHandler=this.operatorClickHandler,numberClickHandler=this.numberClickHandler,deleteChar=this.deleteChar,allClear=this.allClear,equalHandler=this.equalHandler,getOverall=this.getOverall;var activeOperator=function activeOperator(name){return operator===name?'active':'';};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"display\"},/*#__PURE__*/React.createElement(\"p\",{className:\"display-overall\"},getOverall().trim()),/*#__PURE__*/React.createElement(\"p\",{className:\"display-text\"},display)),/*#__PURE__*/React.createElement(\"div\",{className:\"inputs\"},/*#__PURE__*/React.createElement(\"div\",{className:\"column main\"},/*#__PURE__*/React.createElement(\"div\",{className:\"operator\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"})),\" \",/*#__PURE__*/React.createElement(\"div\",{className:\"numbers\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"button\",{onClick:numberClickHandler},\"7\"),/*#__PURE__*/React.createElement(\"button\",{onClick:numberClickHandler},\"8\"),/*#__PURE__*/React.createElement(\"button\",{onClick:numberClickHandler},\"9\")),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"button\",{onClick:numberClickHandler},\"4\"),/*#__PURE__*/React.createElement(\"button\",{onClick:numberClickHandler},\"5\"),/*#__PURE__*/React.createElement(\"button\",{onClick:numberClickHandler},\"6\")),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"button\",{onClick:numberClickHandler},\"1\"),/*#__PURE__*/React.createElement(\"button\",{onClick:numberClickHandler},\"2\"),/*#__PURE__*/React.createElement(\"button\",{onClick:numberClickHandler},\"3\")),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"button\",{onClick:numberClickHandler},\".\"),/*#__PURE__*/React.createElement(\"button\",{onClick:numberClickHandler},\"0\"),/*#__PURE__*/React.createElement(\"button\",{onClick:deleteChar},\"C\"))),\" \"),\" \",/*#__PURE__*/React.createElement(\"div\",{className:\"column sides\"},/*#__PURE__*/React.createElement(\"button\",{className:activeOperator('+'),onClick:operatorClickHandler},\"+\"),/*#__PURE__*/React.createElement(\"button\",{className:activeOperator('-'),onClick:operatorClickHandler},\"-\"),/*#__PURE__*/React.createElement(\"button\",{className:activeOperator(':'),onClick:operatorClickHandler},\":\"),/*#__PURE__*/React.createElement(\"button\",{className:activeOperator('*'),onClick:operatorClickHandler},\"*\")),/*#__PURE__*/React.createElement(\"div\",{className:\"column sides\"},/*#__PURE__*/React.createElement(\"button\",{className:\"ac\",onClick:allClear},\"AC\"),/*#__PURE__*/React.createElement(\"button\",{className:\"equal\",onClick:equalHandler},\"=\")),\" \"),\" \");}}]);return Calculator;}(React.Component);export default Calculator;","map":{"version":3,"sources":["/Users/nupurmaheshwari/Documents/Poker/GitHub/nupurmaheshwari.github.io/src/calcCode.js"],"names":["React","Calculator","state","firstVal","secondVal","operator","display","keypressHandler","ev","setNumberValue","setOperatorValue","equalHandler","allClear","deleteChar","numRegex","opRegex","eqRegex","delRegex","acRegex","key","isNumber","exec","isOperator","isEqual","isDel","isAc","resetState","resetAll","setState","hasPoint","value","indexOf","fixNumberString","setDisplay","total","getOverall","getCurrentTargetValue","numberClickHandler","e","target","innerHTML","operatorInput","calculate","fixedNumber","operatorClickHandler","newVal","slice","removeZeroAtStart","substring","finalize","length","vfirstVal","vsecondVal","parseFloat","toLocaleString","document","addEventListener","activeOperator","name","trim","Component"],"mappings":"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","sourcesContent":["import React from 'react'\n\n\nclass Calculator extends React.Component {\n  state = {\n    firstVal: '',\n    secondVal: '',\n    operator: '',\n    display: '0',\n  }\n\n  componentDidMount() {\n    const { keypressHandler } = this\n    document.addEventListener('keyup', ev => {\n      keypressHandler(ev)\n    })\n  }\n\n  keypressHandler = ev => {\n    const {\n      setNumberValue,\n      setOperatorValue,\n      equalHandler,\n      allClear,\n      deleteChar,\n    } = this\n    const { \n      operator,\n      secondVal,\n    } = this.state\n    const numRegex = /^([0-9]|\\.)*$/g;\n    const opRegex =  /[+|\\-|:|*]/g;\n    const eqRegex =  /(=)/g;\n    const delRegex = /(Backspace|Delete)/g;\n    const acRegex = /(Escape)/g;\n    const key = ev.key\n   \n    const isNumber = !!numRegex.exec(key)\n    const isOperator = !!opRegex.exec(key)\n    const isEqual = !!eqRegex.exec(key)\n    const isDel = !!delRegex.exec(key)\n    const isAc = !!acRegex.exec(key)\n    \n    if (key && isNumber) {\n      setNumberValue(key + '')\n    }\n    \n    if (key && isOperator) {\n      setOperatorValue(key + '')\n    }\n    \n    if (key && isEqual) {\n      equalHandler()\n    }\n    \n    if (key && isDel) {\n      deleteChar()\n    }\n    \n    if (key && isAc) {\n      allClear()\n    }\n  }\n\n  resetState = resetAll => {\n    if (resetAll) {\n      this.setState({\n        firstVal: '',\n        secondVal: '',\n        operator: '',\n        display: '0',\n     })\n    } else {\n      this.setState({\n        firstVal: '',\n        secondVal: '',\n        operator: '',\n     })\n    }\n  } \n  \n  hasPoint = (value) => {\n    return value.indexOf('.') > -1\n  }\n  \n  setNumberValue = value => {\n    const {\n      firstVal,\n      secondVal,\n      operator,\n    } = this.state\n    const { \n      fixNumberString,\n      setDisplay,\n    } = this\n    let total\n    \n    // if point is pressed, check if we already have it in current states\n    if (value === '.') {\n      if (!operator && !this.hasPoint(firstVal)) {      \n        total = fixNumberString(firstVal + value)\n        this.setState({\n          firstVal: total\n        })\n      }\n      if (!!operator && !this.hasPoint(secondVal)) {\n        total = fixNumberString(secondVal + value)\n        this.setState({\n          secondVal: total\n        })\n      }\n      if (total) {\n        setDisplay(total + '')\n      }\n      return\n    }\n    \n    // if input is a number, check if it's first or second number\n    if (!operator) {\n      total = fixNumberString(firstVal + value)\n      this.setState({\n        firstVal: total\n      })\n    } else {\n      total = fixNumberString(secondVal + value)\n      this.setState({\n        secondVal: total\n      })\n    }\n    setDisplay(total + '')\n  }\n  \n  getOverall = () => {\n    const { \n      firstVal,\n      secondVal,\n      operator,\n    } = this.state\n    return firstVal + ' ' + operator + ' ' + secondVal\n  }\n  \n  setDisplay = value => {\n    const { \n      firstVal,\n      secondVal,\n    } = this.state\n    \n    this.setState({\n      display: value,\n    })\n  }\n  \n  getCurrentTargetValue = () => {\n    const {\n      firstVal,\n      secondVal,\n      operator,\n    } = this.state\n    return !operator ? firstVal : secondVal\n  }\n  \n  numberClickHandler = (e) => {\n    const value = e.target.innerHTML\n    if (value) {\n      this.setNumberValue(value)\n    }\n  }\n  \n  setOperatorValue = operatorInput => {\n    const { \n      firstVal,\n      secondVal,\n      operator,\n      display,\n    } = this.state\n    const { \n      fixNumberString,\n      calculate,\n      setDisplay,\n    } = this\n    const fixedNumber = fixNumberString(firstVal, false)\n    \n    if (firstVal && !secondVal) {\n      this.setState({\n        operator: operatorInput,\n        display: fixedNumber,\n      })\n    } else if (firstVal && operator && secondVal) {\n     const total = calculate()\n     this.setState({\n       operator: operatorInput,\n       firstVal: total + '',\n       secondVal: '',\n     })\n     setDisplay(total + '')\n    } else {\n      this.setState({\n        operator: operatorInput,\n        firstVal: fixNumberString(display, false),\n      })\n    }\n  }\n  \n  operatorClickHandler = (e) => {\n    const { setOperatorValue } = this\n    const operatorInput = e.target.innerHTML\n    \n    setOperatorValue(operatorInput)\n  }\n  \n  allClear = () => {\n    this.resetState(true)\n  }\n  \n  deleteChar = () => {\n    const {\n      firstVal,\n      secondVal,\n      operator,\n    } = this.state\n    const opRegex =  /[+|\\-|:|*]/g;\n    \n    if (!operator) {\n      const newVal = firstVal.slice(0, -1)\n      this.setState({\n        firstVal: newVal,\n        display: newVal ? newVal : '0',\n      })\n    } else if (operator && !secondVal) {\n      this.setState({\n        display: firstVal,\n        operator: '',\n      })\n    } else {\n      const newVal = secondVal.slice(0, -1)\n      this.setState({\n        secondVal: newVal,\n        display: newVal ? newVal : '0',\n      })\n    }\n  }\n  \n  removeZeroAtStart = value => {\n    return value.indexOf('0') === 0 ? value.substring(1) : value\n  }\n  \n  fixNumberString = (value, finalize = false) => {\n    // if input has hanging point e.g. '0.'/'1.', add trailing zero\n    // should only run when moving to second value / begin calculation\n    if (finalize && value.indexOf('.') === value.length - 1 && value.length > 1) { \n      return value + '0'\n    }\n    // if value has zero prefix but not a decimal value, e.g. '01'/'03', remove zero\n    if (value.indexOf('0') === 0 && !value.indexOf('0.') === 0) {\n      return value.substring(1)\n    }\n    // if value is a first point input '.', add zero prefix\n    if (value.indexOf('.') === 0 && value.length === 1) {\n      return '0.'\n    }\n    if (!value) {\n      return '0'\n    }\n    return value\n  }\n  \n  calculate = () => {\n    const {\n      firstVal,\n      secondVal,\n      operator,\n    } = this.state\n    const {\n      fixNumberString,\n    } = this\n    \n    const vfirstVal = fixNumberString(firstVal, true)\n    const vsecondVal = fixNumberString(secondVal, true)\n    let total = '0';\n    \n    switch (operator) {\n      case '-' :\n        total = parseFloat(vfirstVal) - parseFloat(vsecondVal)\n        break;\n      case '*':\n        total = parseFloat(vfirstVal) * parseFloat(vsecondVal)\n        break;\n      case ':' :\n        total = parseFloat(vfirstVal) / parseFloat(vsecondVal)\n        break;\n      case '+' :\n      default:\n        total = parseFloat(vfirstVal) + parseFloat(vsecondVal)\n        break;\n    }\n    \n    return total.toLocaleString()\n  }\n  \n  equalHandler = () => {\n    const {\n      firstVal,\n      secondVal,\n      operator,\n    } = this.state\n    const {\n      setDisplay,\n      resetState,\n      calculate,\n    } = this\n    \n    if (firstVal && secondVal && operator) {\n      let total = calculate()\n      setDisplay(total + '')\n      resetState()\n    }\n  }\n  \n  render() {\n    const { \n      display,\n      operator,\n    } = this.state\n    const {\n      operatorClickHandler,\n      numberClickHandler,\n      deleteChar,\n      allClear,\n      equalHandler,\n      getOverall,\n    } = this\n    const activeOperator = name => {\n      return operator === name ? 'active' : ''\n    }\n    return (\n      <div>\n        <div className=\"display\">\n          <p className=\"display-overall\">{ getOverall().trim() }</p>\n          <p className=\"display-text\">{ display }</p>\n        </div>\n        <div className=\"inputs\">\n          <div className=\"column main\">\n            <div className=\"operator\">\n              <div className=\"row\">\n               \n              </div>\n            </div> { /* operator */ }\n            <div className=\"numbers\">\n              <div className=\"row\">\n                <button onClick={numberClickHandler}>7</button>\n                <button onClick={numberClickHandler}>8</button>\n                <button onClick={numberClickHandler}>9</button>\n              </div>\n              <div className=\"row\">\n                <button onClick={numberClickHandler}>4</button>\n                <button onClick={numberClickHandler}>5</button>\n                <button onClick={numberClickHandler}>6</button>\n              </div>\n              <div className=\"row\">\n                <button onClick={numberClickHandler}>1</button>\n                <button onClick={numberClickHandler}>2</button>\n                <button onClick={numberClickHandler}>3</button>\n              </div>\n              <div className=\"row\">\n                <button onClick={numberClickHandler}>.</button>\n                <button onClick={numberClickHandler}>0</button>\n                <button onClick={deleteChar}>C</button>\n              </div>\n            </div> { /* numbers */ }\n          </div> { /* main */ }\n          <div className = \"column sides\">\n              <button \n                className={activeOperator('+')}\n                onClick={operatorClickHandler}>+</button>\n              <button \n                className={activeOperator('-')}\n                onClick={operatorClickHandler}>-</button>\n              <button \n                className={activeOperator(':')}\n                onClick={operatorClickHandler}>:</button>\n              <button \n                className={activeOperator('*')}\n                onClick={operatorClickHandler}>*</button>\n          </div>\n          <div className=\"column sides\">\n            <button className=\"ac\" onClick={allClear}>AC</button>\n            <button className=\"equal\" onClick={equalHandler}>=</button>\n          </div> { /* sides */ }\n        </div> { /* inputs */ }\n      </div>\n    )\n  }\n}\n\nexport default Calculator;"]},"metadata":{},"sourceType":"module"}