{"ast":null,"code":"var _jsxFileName = \"/Users/nupurmaheshwari/Documents/Misc/poker/pokertest/src/holeinput.js\";\nimport React from 'react'; //import ReactDOM from 'react-dom';\n//import CustomButton from './customButton';\n\nimport './index.css';\nimport TextField from '@material-ui/core/TextField';\n\nclass HoleInput extends React.Component {\n  constructor() {\n    super();\n\n    this._handleTextFieldChange = ev => {\n      this.setState({\n        holeInputValue: ev.target.value\n      }); // if hole input value isn't either empty or valid, display error message\n\n      if (!ev.target.value.match(/^([AKQJakqj2-9]|10)([AKQJakqj2-9]|10)([osOS])$/) && !ev.target.value.match(/^$/)) {\n        this.setState({\n          error: \"Error\"\n        });\n      } else {\n        this.setState({\n          error: \"\"\n        });\n      } // update state of hole input value in parents class bumfuck\n\n\n      this.props.updateHoleState(ev.currentTarget.value);\n    };\n\n    this.state = {\n      holeInputValue: \"\",\n      error: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"holeinput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      error: this.state.error,\n      label: \"hole input\",\n      id: \"standard-size-small\",\n      defaultValue: \"\",\n      size: \"small\",\n      onChange: ev => this._handleTextFieldChange(ev) //helperText={this.state.error}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default HoleInput;","map":{"version":3,"sources":["/Users/nupurmaheshwari/Documents/Misc/poker/pokertest/src/holeinput.js"],"names":["React","TextField","HoleInput","Component","constructor","_handleTextFieldChange","ev","setState","holeInputValue","target","value","match","error","props","updateHoleState","currentTarget","state","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AACA,OAAO,aAAP;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;AAGA,MAAMC,SAAN,SAAwBF,KAAK,CAACG,SAA9B,CAAwC;AAEvCC,EAAAA,WAAW,GAAG;AACb;;AADa,SAUZC,sBAVY,GAUcC,EAAD,IAAQ;AAChC,WAAKC,QAAL,CAAc;AAACC,QAAAA,cAAc,EAAEF,EAAE,CAACG,MAAH,CAAUC;AAA3B,OAAd,EADgC,CAGlC;;AACA,UAAI,CAACJ,EAAE,CAACG,MAAH,CAAUC,KAAV,CAAgBC,KAAhB,CAAsB,gDAAtB,CAAD,IAA4E,CAACL,EAAE,CAACG,MAAH,CAAUC,KAAV,CAAgBC,KAAhB,CAAsB,IAAtB,CAAjF,EAA8G;AAC7G,aAAKJ,QAAL,CAAc;AAACK,UAAAA,KAAK,EAAE;AAAR,SAAd;AACA,OAFD,MAGK;AACJ,aAAKL,QAAL,CAAc;AAACK,UAAAA,KAAK,EAAE;AAAR,SAAd;AACA,OATiC,CAW9B;;;AACJ,WAAKC,KAAL,CAAWC,eAAX,CAA2BR,EAAE,CAACS,aAAH,CAAiBL,KAA5C;AACE,KAvBW;;AAGb,SAAKM,KAAL,GAAa;AACZR,MAAAA,cAAc,EAAE,EADJ;AAENI,MAAAA,KAAK,EAAE;AAFD,KAAb;AAIA;;AAoBDK,EAAAA,MAAM,GAAG;AACL,wBACC;AAAK,MAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,UAAU,MAAhB;AAAiB,MAAA,YAAY,EAAC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,SAAD;AACH,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWJ,KADf;AAEJ,MAAA,KAAK,EAAC,YAFF;AAGJ,MAAA,EAAE,EAAC,qBAHC;AAIJ,MAAA,YAAY,EAAC,EAJT;AAKJ,MAAA,IAAI,EAAC,OALD;AAMJ,MAAA,QAAQ,EAAGN,EAAD,IAAM,KAAKD,sBAAL,CAA4BC,EAA5B,CANZ,CAOJ;AAPI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADJ,CADD;AAeA;;AA7CmC;;AAiDxC,eAAeJ,SAAf","sourcesContent":["import React from 'react';\n//import ReactDOM from 'react-dom';\n//import CustomButton from './customButton';\nimport './index.css';\nimport TextField from '@material-ui/core/TextField';\n\n\nclass HoleInput extends React.Component {\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tholeInputValue: \"\",\n         error: \"\"\n\t\t}\n\t}\n\n\n  \t_handleTextFieldChange = (ev) => {\n  \t\tthis.setState({holeInputValue: ev.target.value});\n\n\t\t// if hole input value isn't either empty or valid, display error message\n\t\tif (!ev.target.value.match(/^([AKQJakqj2-9]|10)([AKQJakqj2-9]|10)([osOS])$/) && !ev.target.value.match(/^$/)) {\n\t\t\tthis.setState({error: \"Error\"})\n\t\t}\n\t\telse {\n\t\t\tthis.setState({error: \"\"})\n\t\t}\n\n      // update state of hole input value in parents class bumfuck\n\t\tthis.props.updateHoleState(ev.currentTarget.value)\n  \t}\n\n\n\n\trender() {\n\t    return (\n\t    \t<div className = \"holeinput\">\n\t    \t    <form noValidate autoComplete=\"off\">\n     \t\t\t\t <TextField\n\t\t\t\t\t \terror={this.state.error}\n\t\t\t\t\t\tlabel=\"hole input\"\n\t\t\t\t\t\tid=\"standard-size-small\"\n\t\t\t\t\t\tdefaultValue=\"\"\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\tonChange={(ev)=>this._handleTextFieldChange(ev)}\n\t\t\t\t\t\t//helperText={this.state.error}\n\t\t\t\t\t />\n    \t\t\t</form>\n    \t\t</div>\n\t    );\n  \t\t}\n}\n\n\nexport default HoleInput;\n"]},"metadata":{},"sourceType":"module"}