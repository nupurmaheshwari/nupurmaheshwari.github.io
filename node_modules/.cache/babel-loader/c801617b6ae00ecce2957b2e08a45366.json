{"ast":null,"code":"var _jsxFileName = \"/Users/nupurmaheshwari/Documents/react/pokertest/src/bumfuck.js\";\nimport React from 'react'; //import ReactDOM from 'react-dom';\n\nimport Button from '@material-ui/core/Button';\nimport CustomButton from './customButton';\nimport SubmitButton from './submitButton';\nimport RefreshButton from './refreshButton';\nimport PotType from './potType';\nimport StackDepth from './stackDepth';\nimport Hero from './hero';\nimport Villain from './villain';\nimport BvB from './bvb';\nimport HoleInput from './holeInput';\nexport default class BumFuck extends React.Component {\n  constructor() {\n    super(); // submitValue holds the value of clicked button in pottype row\n\n    this.state = {\n      potValue: '',\n      stackValue: '',\n      heroValue: '',\n      villainValue: '',\n      bvbValue: '',\n      holeValue: ''\n    };\n    this.updatePotValue = this.updatePotValue.bind(this);\n    this.updateStackValue = this.updateStackValue.bind(this);\n    this.updateHeroValue = this.updateHeroValue.bind(this);\n    this.updateVillainValue = this.updateVillainValue.bind(this);\n    this.updateBvbValue = this.updateBvbValue.bind(this);\n    this.updateHoleValue = this.updateHoleValue.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  } // setState forces rerender so buttons update with each click\n\n\n  updatePotValue(val) {\n    this.setState({\n      potValue: val\n    });\n  }\n\n  updateStackValue(val) {\n    this.setState({\n      stackValue: val\n    });\n  }\n\n  updateHeroValue(val) {\n    this.setState({\n      heroValue: val\n    });\n  }\n\n  updateVillainValue(val) {\n    this.setState({\n      villainValue: val\n    });\n  }\n\n  updateBvbValue(val) {\n    this.setState({\n      bvbValue: val\n    });\n  }\n\n  updateHoleValue(val) {\n    this.setState({\n      holeValue: val\n    });\n  } // helper function called in every class's handleClick, allowing user to toggle between buttons \n  // mappy = map of values to buttons (defined in handleclick)\n  // ev = event state \n\n\n  toggleButtons(ev, mappy) {\n    for (var key in mappy) {\n      console.log(\"KEY: \", key);\n      let button = mappy[[key]];\n\n      if (key === ev.currentTarget.value) {\n        button.clickedOn();\n      } else {// button.clickedOff()\n      }\n    }\n  }\n\n  handleSubmit() {\n    console.log(\"pot: \", this.state.potValue, \"stack: \", this.state.stackValue, \"hero: \", this.state.heroValue, \"villain: \", this.state.villainValue, \"bvb: \", this.state.bvbValue, \"hole: \", this.state.holeValue);\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // potValue = {this.state.value} is passing in the value of the selected potType button\n      //created new div \"final row\" for styling purposes\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 5\n        }\n      }, \"pot type\"), /*#__PURE__*/React.createElement(PotType, {\n        pToggleButtons: this.toggleButtons,\n        updatePotState: this.updatePotValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 5\n        }\n      }, \"stack depth\"), /*#__PURE__*/React.createElement(StackDepth, {\n        sToggleButtons: this.toggleButtons,\n        updateStackState: this.updateStackValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 5\n        }\n      }, \"hero\"), /*#__PURE__*/React.createElement(Hero, {\n        hToggleButtons: this.toggleButtons,\n        updateHeroState: this.updateHeroValue,\n        villainValue: this.state.villainValue,\n        potValue: this.state.potValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 5\n        }\n      }, \"villian\"), /*#__PURE__*/React.createElement(Villain, {\n        vToggleButtons: this.toggleButtons,\n        updateVillainState: this.updateVillainValue,\n        heroValue: this.state.heroValue,\n        potValue: this.state.potValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 5\n        }\n      }, \"bvb\"), /*#__PURE__*/React.createElement(BvB, {\n        bToggleButtons: this.toggleButtons,\n        updateBvbState: this.updateBvbValue,\n        potValue: this.state.potValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"finalRow\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(HoleInput, {\n        potValue: this.state.potValue,\n        updateHoleState: this.updateHoleValue,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 6\n        }\n      }), /*#__PURE__*/React.createElement(SubmitButton, {\n        handleSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 6\n        }\n      }), /*#__PURE__*/React.createElement(RefreshButton, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 6\n        }\n      })))\n    );\n  }\n\n}","map":{"version":3,"sources":["/Users/nupurmaheshwari/Documents/react/pokertest/src/bumfuck.js"],"names":["React","Button","CustomButton","SubmitButton","RefreshButton","PotType","StackDepth","Hero","Villain","BvB","HoleInput","BumFuck","Component","constructor","state","potValue","stackValue","heroValue","villainValue","bvbValue","holeValue","updatePotValue","bind","updateStackValue","updateHeroValue","updateVillainValue","updateBvbValue","updateHoleValue","handleSubmit","val","setState","toggleButtons","ev","mappy","key","console","log","button","currentTarget","value","clickedOn","render"],"mappings":"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","sourcesContent":["import React from 'react';\n//import ReactDOM from 'react-dom';\nimport Button from '@material-ui/core/Button';\nimport CustomButton from './customButton';\nimport SubmitButton from './submitButton';\nimport RefreshButton from './refreshButton';\n\n\nimport PotType from './potType';\nimport StackDepth from './stackDepth';\nimport Hero from './hero';\nimport Villain from './villain';\nimport BvB from './bvb';\nimport HoleInput from './holeInput';\n\n\n\nexport default class BumFuck extends React.Component {\n\n\tconstructor() {\n        super();\n\n        // submitValue holds the value of clicked button in pottype row\n        this.state = {\n        \tpotValue: '',   \n        \tstackValue : '',\n        \theroValue : '',\n        \tvillainValue : '',\n        \tbvbValue : '',\n        \tholeValue : '',\n        }\n\n        this.updatePotValue = this.updatePotValue.bind(this); \n        this.updateStackValue = this.updateStackValue.bind(this);\n        this.updateHeroValue = this.updateHeroValue.bind(this);\n        this.updateVillainValue = this.updateVillainValue.bind(this);\n        this.updateBvbValue = this.updateBvbValue.bind(this);\n        this.updateHoleValue = this.updateHoleValue.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    // setState forces rerender so buttons update with each click\n    updatePotValue(val) {\n    \tthis.setState ({potValue: val})\t\n\t}\n\tupdateStackValue(val) {\n    \tthis.setState ({stackValue: val})\t\n\t}\n\tupdateHeroValue(val) {\n    \tthis.setState ({heroValue: val})\t\n\t}\n\tupdateVillainValue(val) {\n    \tthis.setState ({villainValue: val})\t\n\t}\n\tupdateBvbValue(val) {\n    \tthis.setState ({bvbValue: val})\t\n\t}\n\tupdateHoleValue(val) {\n    \tthis.setState ({holeValue: val})\t\n\t}\n\n\t// helper function called in every class's handleClick, allowing user to toggle between buttons \n\t// mappy = map of values to buttons (defined in handleclick)\n\t// ev = event state \n\ttoggleButtons(ev, mappy) {\n\t\tfor (var key in mappy) {\n\t\t\tconsole.log(\"KEY: \", key)\n\t\t\tlet button = mappy[[key]]\n\t\t\tif (key === ev.currentTarget.value) {\n\t\t\t\tbutton.clickedOn()\n\t\t \t} \n\t\t \telse {\n\t\t \t\t// button.clickedOff()\n\t\t \t}\n\t\t}\t\n\t}\n\n\n\thandleSubmit() {\n\t\tconsole.log(\n\t\t\t\"pot: \", this.state.potValue,\n\t\t\t\"stack: \", this.state.stackValue,\n\t\t\t\"hero: \", this.state.heroValue,\n\t\t\t\"villain: \", this.state.villainValue,\n\t\t\t\"bvb: \", this.state.bvbValue,\n\t\t\t\"hole: \", this.state.holeValue\n\t\t)\n\t}\n\n\n\trender() {\n\t\treturn (\n\t\t\t// potValue = {this.state.value} is passing in the value of the selected potType button\n\t\t\t//created new div \"final row\" for styling purposes\n\n\t\t\t<div>\n\t\t\t\t<h5>pot type</h5>\n\t\t\t\t<PotType pToggleButtons={this.toggleButtons} updatePotState={this.updatePotValue}/>\n\n\t\t\t\t<h5>stack depth</h5>\n\t\t\t\t<StackDepth sToggleButtons={this.toggleButtons} updateStackState={this.updateStackValue} />\n\t\t\t\t\n\t\t\t\t<h5>hero</h5>\n\t\t\t\t<Hero hToggleButtons={this.toggleButtons} updateHeroState={this.updateHeroValue} villainValue={this.state.villainValue} potValue={this.state.potValue}/>\n\t\t\t\t\n\t\t\t\t<h5>villian</h5>\n\t\t\t\t<Villain vToggleButtons={this.toggleButtons} updateVillainState={this.updateVillainValue} heroValue={this.state.heroValue} potValue={this.state.potValue}/>\n\t\t\t\t\n\t\t\t\t<h5>bvb</h5>\n\t\t\t\t<BvB bToggleButtons={this.toggleButtons} updateBvbState={this.updateBvbValue} potValue={this.state.potValue}/>\n\t\t\t\t\n\t\t\t\t<div className = \"finalRow\">\n\t\t\t\t\t<HoleInput potValue={this.state.potValue} updateHoleState={this.updateHoleValue}/> \n\t\t\t\t\t<SubmitButton handleSubmit={this.handleSubmit}/>\n\t\t\t\t\t<RefreshButton/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}"]},"metadata":{},"sourceType":"module"}