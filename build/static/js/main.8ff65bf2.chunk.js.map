{"version":3,"sources":["submitButton.js","refreshButton.js","customButton.js","stringConstants.js","pottype.js","stackDepth.js","hero.js","villain.js","bvb.js","holeinput.js","result.js","calcCode.js","dialog.js","calcButton.js","bumfuck.js","index.js"],"names":["SubmitButton","state","color","disabled","opacity","hi","props","this","holeInputValue","match","setState","mystyle","backgroundColor","width","Button","value","style","onClick","handleSubmit","React","Component","RefreshButton","border","textColor","window","location","reload","CustomButton","disableToggle","clickedOn","bind","clickedOff","enabled","BVB","UTG","MP","LJ","HJ","CO","BU","SB","BB","SB_U","SB_L_v_I","BB_v_L","BB_v_O","PotType","handleClick","ev","mappy","_custombutton","_custombutton2","_custombutton3","constant","_custombutton4","pToggleButtons","updatePotState","currentTarget","submitValue","onSubmit","onFormSubmit","className","ref","StackDepth","_custombutton5","_custombutton6","_custombutton7","sToggleButtons","updateStackState","Hero","_custombutton8","hToggleButtons","updateHeroState","allHeroButtons","firstSixButtons","vsOpenButtons","potValue","value0","value1","value2","vToggleButtons","updateVillainState","allVillainButtons","vs3Buttons","button","heroValue","beforeHero","value4","afterHero","value5","BvB","bToggleButtons","updateBvbState","allBvbButtons","sbOptions","bbOptions","value3","HoleInput","_handleTextFieldChange","target","error","updateHoleState","noValidate","autoComplete","TextField","label","id","defaultValue","size","onChange","Result","finalResult","Calculator","firstVal","secondVal","operator","display","keypressHandler","setNumberValue","setOperatorValue","equalHandler","allClear","deleteChar","key","isNumber","exec","isOperator","isEqual","isDel","isAc","resetState","resetAll","hasPoint","indexOf","total","fixNumberString","setDisplay","getOverall","getCurrentTargetValue","numberClickHandler","e","innerHTML","operatorInput","calculate","fixedNumber","operatorClickHandler","newVal","slice","removeZeroAtStart","substring","finalize","length","vfirstVal","vsecondVal","parseFloat","toLocaleString","document","addEventListener","activeOperator","name","trim","PaperComponent","handle","cancel","Paper","DraggableDialog","useState","open","setOpen","handleClose","IconButton","Dialog","onClose","aria-labelledby","DialogTitle","cursor","DialogContent","DialogActions","autoFocus","CalcButton","BumFuck","stackValue","villainValue","bvbValue","holeValue","action","updatePotValue","updateStackValue","updateHeroValue","updateVillainValue","updateBvbValue","updateHoleValue","val","final_array","console","log","toggleButtons","submitState","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8ff65bf2.chunk.js","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport './index.css';\n //7e7e7e\n\nclass SubmitButton extends React.Component {\n   \n   constructor() {\n      super();\n      \n      this.state = {\n         color: '#E3816F',\n         disabled: true,\n         opacity: 0.4,\n         hi: '',\n      }\n   }\n\n   componentDidUpdate(props) {\n      if (this.state.hi !== this.props.holeInputValue) {\n         if (this.props.holeInputValue.match(/^([AKQJakqj2-9]|10)([AKQJakqj2-9]|10)([osOS])$/)) {\n            this.setState({disabled: false})\n            // CHANGE COLOR\n            this.setState({color: '#E3816F', opacity: 1})\n         }\n         else {\n            this.setState({disabled: true})\n            // CHANGE COLOR\n            this.setState({color: '#E3816F', opacity: 0.4})\n         }\n         this.setState({hi : this.props.holeInputValue})\n      }\n   }\n\n   // display individual button\n   render() {\n      const mystyle = {\n         backgroundColor: this.state.color,\n         width: \"15%\",\n         opacity: this.state.opacity,\n      };\n  \t\treturn (\n         <Button\n            value = \"Submit\"\n            style = {mystyle}\n            disabled = {this.state.disabled}\n            onClick = {this.props.handleSubmit}\n            >\n            Submit\n  \t\t\t</Button>\n      )\n  \t}\n}\n\nexport default SubmitButton;\n","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport Button from '@material-ui/core/Button';\nimport './index.css';\n\nclass RefreshButton extends React.Component {\n  constructor(){\n    super();\n\n    this.state = {\n      color: '#191829',\n      border: 'solid #A5A3B2',\n      textColor: '#A5A3B2'\n    }    \n  }\n\n  // display individual button\n  render() {\n    const mystyle = {\n       backgroundColor: this.state.color,\n       width: \"10%\",\n       border: this.state.border,\n       color: this.state.textColor,\n    };\n  \treturn (\n      <Button\n            value = \"clear\"\n            style = {mystyle}\n            disabled = {this.state.disabled}\n            onClick = {() => window.location.reload(false)}\n            >\n            CLEAR\n        </Button>\n\n\n\n    )\n  }\n};\n\nexport default RefreshButton;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport './index.css';\n\n\nclass CustomButton extends React.Component {\n\n    constructor(){\n        super();\n\n        // state of\n        this.state = {\n        \tcolor: '#564D8F',\n            disableToggle: false,\n            textColor: '#ffffff',\n        }\n\n        this.clickedOn = this.clickedOn.bind(this)\n        this.clickedOff = this.clickedOff.bind(this)\n        this.disabled = this.disabled.bind(this)\n        this.enabled = this.enabled.bind(this)\n    }\n\n\n   \tclickedOff() {\n   \t\tthis.setState({color: '#564D8F'})\n   \t}\n\n   \tclickedOn() {\n   \t\tthis.setState({color: '#A196DC'})\n   \t}\n\n    disabled() {\n        this.setState({disableToggle: true})\n        this.setState({color: '#564D8F'})\n    }\n\n    enabled() {\n        this.setState({disableToggle: false})\n    }\n\n    // display individual button\n  \trender() {\n  \t\treturn (\n            <Button\n      \t\t\tvalue = {this.props.value}\n                disabled = {this.state.disableToggle}\n      \t\t\tstyle = {{backgroundColor: this.state.color}}\n      \t\t\tonClick = {this.props.onClick}\n                >\n\t  \t\t        {this.props.value}\n  \t\t\t</Button> )\n  \t}\n}\n\nexport default CustomButton;\n","// PotType button constants\nexport const BVB = \"Blind vs Blind\";\nexport const RFI = 'RFI';\nexport const VS_3 = 'Vs 3';\nexport const VS_OPEN = 'Vs Open';\n\n\n// Villain & Hero button constants\nexport const UTG = \"UTG\";\nexport const MP = 'MP';\nexport const LJ = 'LJ';\nexport const HJ = 'HJ';\nexport const CO = \"CO\"\nexport const BU = 'BTN';\nexport const SB = 'SB';\nexport const BB = 'BB';\n\n\n// StackDepth button constants\nexport const _10 = \"10-15\";\nexport const _16 = '16-20';\nexport const _21 = '21-25';\nexport const _26 = '26-35';\nexport const _36 = \"36-50\"\nexport const _51 = '51-80';\nexport const _81 = '81-100';\n\n\n// BvB button constants\nexport const SB_U = \"SB Unopened\";\nexport const SB_L_v_I = \"SB Limp v ISO\";\nexport const SB_v_3 = \"SB v 3!\";\nexport const BB_v_L = \"BB v Limp\";\nexport const BB_v_O = \"BB v Open\";\n\n\n","import React from 'react';\nimport CustomButton from './customButton';\nimport './index.css';\n//question: should this variable rlly be called constant??\nimport * as constant from './stringConstants';\n\n\nclass PotType extends React.Component {\n\n\tconstructor() {\n\t\tsuper();\n\n\t\t// submitValue holds the value of clicked button in PotType row\n\t\tthis.state = {\n\t\t\tsubmitValue : ''\n\t\t}\n\t}\n\n\n\thandleClick = ev => {\n\t\t// map values (string constants) to appropriate button\n\t\tlet mappy = {[constant.RFI]: this._custombutton, [constant.VS_OPEN]: this._custombutton2, [constant.VS_3]: this._custombutton3, [constant.BVB]: this._custombutton4}\n\t\tthis.props.pToggleButtons(ev, mappy)\n\n\t\t// update state of value in parents class bumfuck\n\t\tthis.props.updatePotState(ev.currentTarget.value)\n\t\t// update state of submitValue in this class\n\t\tthis.setState ({submitValue: ev.currentTarget.value})\n\n\t}\n\n\n\trender() {\n\t    return (\n\t      \t<div>\n\t       \t\t<form onSubmit={this.onFormSubmit}>\n\t        \t\t<div className=\"board-row\">\n\t        \t\t\t<CustomButton value={constant.RFI} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton = ref)} ></CustomButton>\n\t       \t\t\t\t<CustomButton value={constant.VS_OPEN} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton2 = ref)} ></CustomButton>\n\t       \t\t\t\t<CustomButton value={constant.VS_3}onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton3 = ref)} ></CustomButton>\n\t       \t\t\t\t<CustomButton value={constant.BVB} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton4 = ref)} ></CustomButton>\n\t        \t\t</div>\n\t        \t</form>\n\t      </div>\n\t    );\n  \t}\n};\n\nexport default PotType;\n","import React from 'react';\nimport CustomButton from './customButton';\nimport './index.css';\nimport * as constant from './stringConstants';\n\n\nclass StackDepth extends React.Component {\n\n\tconstructor() {\n\t\tsuper();\n\n\t\t// submitValue holds the value of clicked button in stackDepth row\n\t\tthis.state = {\n\t\t\tsubmitValue : '',\n\t\t}\n\t}\n\n\thandleClick = ev => { \n\t\tlet mappy = {[constant._10]: this._custombutton, [constant._16]: this._custombutton2, [constant._21]:  this._custombutton3, [constant._26]: this._custombutton4, \n\t\t\t[constant._36]: this._custombutton5, [constant._51]: this._custombutton6, [constant._81]:  this._custombutton7}\n\t\tthis.props.sToggleButtons(ev, mappy)\n\n\t\t// update state of value in parents class bumfuck\n\t\tthis.props.updateStackState(ev.currentTarget.value)\n\t\t// update state of submitValue in this class (for use in form submission)\n\t\tthis.setState ({submitValue: ev.currentTarget.value})\n\t\t//this.props.sSendData(this.state.submitValue\n\t}\n\n\trender() {\n\t    return (\n\t      \t<div>\n\t       \t\t<form onSubmit={this.onFormSubmit}>\n\t        \t\t<div className=\"board-row\">\n\t\t\t        \t<CustomButton value={constant._10} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant._16} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton2 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant._21} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton3 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant._26} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton4 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant._36} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton5 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant._51} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton6 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant._81} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton7 = ref)} ></CustomButton>\n\t        \t\t</div>\n\t        \t</form>\n\t     \t</div>\n\t    );\n\t}\n}\n\nexport default StackDepth;\n","import React from 'react';\nimport CustomButton from './customButton';\nimport './index.css';\nimport * as constant from './stringConstants';\n\n\nclass Hero extends React.Component {\n\n\tconstructor() {\n\t\tsuper();\n\n\t\t// submitValue holds the value of clicked button in hero row\n\t\tthis.state = {\n\t\t\tsubmitValue : ''\n\t\t}\n\t}\n\n\thandleClick = ev => { \n\t\tlet mappy = {[constant.UTG]: this._custombutton, [constant.MP]: this._custombutton2, [constant.LJ]:  this._custombutton3, [constant.HJ]: this._custombutton4, \n\t\t\t[constant.CO]: this._custombutton5, [constant.BU]: this._custombutton6, [constant.SB]:  this._custombutton7, [constant.BB]: this._custombutton8}\n\t\tthis.props.hToggleButtons(ev, mappy)\n\n\t\t// update state of value in parents class bumfuck\n\t\tthis.props.updateHeroState(ev.currentTarget.value)\n\t\t// update state of submitValue in this class (for use in form submission)\n\t\tthis.setState ({submitValue: ev.currentTarget.value})\n\t\t//this.props.hSendData(this.state.submitValue)\n\t}\n\n\tcomponentDidUpdate(props) {\n\t\t// allHeroButtons is a dict of Hero row buttons \n\t\tlet allHeroButtons = {[constant.UTG]: this._custombutton, [constant.MP]: this._custombutton2, [constant.LJ]:  this._custombutton3, [constant.HJ]: this._custombutton4, \n\t\t\t[constant.CO]: this._custombutton5, [constant.BU]: this._custombutton6, [constant.SB]:  this._custombutton7, [constant.BB]: this._custombutton8}\n\t\t\n\t\tlet firstSixButtons = {...allHeroButtons} \n\t\tdelete firstSixButtons[constant.SB]\n\t\tdelete firstSixButtons[constant.BB]\n\n\t\tlet vsOpenButtons = {...allHeroButtons}\n\t\tdelete vsOpenButtons[constant.UTG]\n\n\t\t// loop through each button and disable or enable based on what PotType value is\n\t\tif ((this.props.potValue === constant.RFI) || (this.props.potValue === constant.VS_3)) {\n\t\t\t// disable last two buttons when RFI & vs_3 clicked\n\t\t\tthis._custombutton7.disabled()\n\t\t\tthis._custombutton8.disabled()\n\t\t\t// enable all other button\n\t\t\tfor (var value0 in firstSixButtons) {\n\t\t\t\tlet button = firstSixButtons[value0]\n\t\t\t\tbutton.enabled()\n\t\t\t}\n\t\t}\n\t\telse if (this.props.potValue === constant.BVB) {\n\t\t\tfor (var value1 in firstSixButtons) {\n\t\t\t\tlet button = firstSixButtons[value1]\n\t\t\t\t// disable first six buttons when bvb clicked\n\t\t\t\tbutton.disabled()\n\t\t\t}\n\t\t\t// enable other buttons\n\t\t\tthis._custombutton7.enabled()\n\t\t\tthis._custombutton8.enabled()\n\t\t}\n\t\telse if (this.props.potValue === constant.VS_OPEN) {\n\t\t\t// disable first button when vs open clicked\n\t\t\tthis._custombutton.disabled()\n\t\t\t// enable all other buttons\n\t\t\tfor (var value2 in vsOpenButtons) {\n\t\t\t\tlet button = vsOpenButtons[value2]\n\t\t\t\tbutton.enabled()\n\t\t\t}\n\t\t}\n\t}\n\n\n\trender() {\n\t    return (\n\t      \t<div>\n\t       \t\t<form onSubmit={this.onFormSubmit}>\n\t        \t\t<div className=\"board-row\">\n\t\t\t        \t<CustomButton value={constant.UTG} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.MP} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton2 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.LJ} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton3 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.HJ} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton4 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.CO} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton5 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.BU} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton6 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.SB} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton7 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.BB} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton8 = ref)} ></CustomButton>\n\t\t\t\t\t</div>\n\t        \t</form>\n\t      \t</div>\n\t    );\n\t}\n}\n\nexport default Hero;\n","import React from 'react';\nimport CustomButton from './customButton';\nimport './index.css';\nimport * as constant from './stringConstants';\n\n\nclass Hero extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\t// submitValue holds the value of clicked button in villain row\n\t\tthis.state = {\n\t\t\tsubmitValue : ''\n\t\t}\n\t}\n\n\thandleClick = ev => { \n\t\tlet mappy = {[constant.UTG]: this._custombutton, [constant.MP]: this._custombutton2, [constant.LJ]:  this._custombutton3, [constant.HJ]: this._custombutton4, \n\t\t\t[constant.CO]: this._custombutton5, [constant.BU]: this._custombutton6, [constant.SB]:  this._custombutton7, [constant.BB]: this._custombutton8}\n\n\t\tthis.props.vToggleButtons(ev, mappy)\n\n\t\t// update state of value in parents class bumfuck\n\t\tthis.props.updateVillainState(ev.currentTarget.value)\n\t\t// update state of submitValue in this class (for use in form submission)\n\t\tthis.setState ({submitValue: ev.currentTarget.value})\n\t\t//this.props.vSendData(this.state.submitValue)\n\t}\n\n\tcomponentDidUpdate(props) {\n\t\t// allVillainButtons is a dictionary of villain row buttons \n\t\tlet allVillainButtons = {[constant.UTG]: this._custombutton, [constant.MP]: this._custombutton2, [constant.LJ]:  this._custombutton3, [constant.HJ]: this._custombutton4, \n\t\t\t[constant.CO]: this._custombutton5, [constant.BU]: this._custombutton6, [constant.SB]:  this._custombutton7, [constant.BB]: this._custombutton8}\n\n\t\tlet vsOpenButtons = {...allVillainButtons} \n\t\tdelete vsOpenButtons[constant.SB]\n\t\tdelete vsOpenButtons[constant.BB]\n\n\t\tlet vs3Buttons = {...allVillainButtons}\n\t\tdelete vs3Buttons[constant.UTG]\n\t\t\n\n\t\t// loop through each button and disable or enable based on what PotType value is\n\t\tif ((this.props.potValue === constant.RFI) || (this.props.potValue === constant.BVB)) {\n\t\t\tfor (var value0 in allVillainButtons) {\n\t\t\t\tlet button = allVillainButtons[value0]\n\t\t\t\t// disable button\n\t\t\t\tbutton.disabled()\n\t\t\t\t// unclick button\n\t\t\t\tbutton.clickedOff()\n\t\t\t}\n\t\t}\n\t\telse if (this.props.potValue === constant.VS_OPEN) {\n\t\t\t// initial grey out\n\t\t\t// disable last two buttons when vs open clicked\n\t\t\tthis._custombutton7.disabled()\n\t\t\tthis._custombutton8.disabled()\n\t\t\t// enable all other buttons \n\t\t\tfor (var value1 in vsOpenButtons) {\n\t\t\t\tlet button = vsOpenButtons[value1]\n\t\t\t\tbutton.enabled()\n\t\t\t}\n\t\t\t// grey out based on VP<HP rule\n\t\t\t// check if hero button has been selected\n\t\t\tif (this.props.heroValue !== '') {\n\t\t\t\t// variable to check if VP button is < HP button\n\t\t\t\tlet beforeHero = true\n\t\t\t\t// loop through vsOpenButtons dictionary\n\t\t\t\tfor (var value2 in vsOpenButtons) {\n\t\t\t\t\t// if villain key is equal to clicked hero button, change variable to false\n\t\t\t\t\tif (value2 === this.props.heroValue) {beforeHero = false}\n\t\t\t\t\tlet button = vsOpenButtons[value2]\n\t\t\t\t\t//if VP button<HP button, and enable button\n\t\t\t\t\tif (beforeHero === true) {\n\t\t\t\t\t\tbutton.enabled()\n\t\t\t\t\t}\n\t\t\t\t\t// if VP button>=HP button, disable button\n\t\t\t\t\telse {\n\t\t\t\t\t\tbutton.disabled()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (this.props.potValue === constant.VS_3) {\n\t\t\t// disable first button when vs open clicked\n\t\t\tthis._custombutton.disabled()\n\t\t\t// enable all other buttons \n\t\t\tfor (var value4 in vs3Buttons) {\n\t\t\t\tlet button = vs3Buttons[value4]\n\t\t\t\tbutton.enabled()\n\t\t\t}\n\t\t\t// grey out based on HP<VP rule\n\t\t\t// check if hero button has been selected\n\t\t\tif (this.props.heroValue !== '') {\n\t\t\t\t// variable to check if VP button is > HP button\n\t\t\t\tlet afterHero = true\n\t\t\t\t// if clicked hero button is equal to UTG change variable to false\n\t\t\t\tif (this.props.heroValue === constant.UTG) {afterHero = false}\n\t\t\t\t// loop through allButtons dictionary\n\t\t\t\tfor (var value5 in vs3Buttons) {\n\t\t\t\t\tlet button = vs3Buttons[value5]\n\t\t\t\t\t// if HP button>VP button, enable button\n\t\t\t\t\tif (afterHero === true) {\n\t\t\t\t\t\tbutton.disabled()\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t//if HP button<=VP button, enable button\n\t\t\t\t\t\tbutton.enabled()\n\t\t\t\t\t}\n\t\t\t\t\t// if villain key is equal to clicked hero button, change variable to false\n\t\t\t\t\tif (value5 === this.props.heroValue) {afterHero = false}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\n\trender() {\n\t    return (\n\t      \t<div>\n\t       \t\t<form onSubmit={this.onFormSubmit}>\n\t        \t\t<div className=\"board-row\">\n\t\t\t        \t<CustomButton value={constant.UTG} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.MP} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton2 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.LJ} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton3 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.HJ} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton4 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.CO} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton5 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.BU} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton6 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.SB} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton7 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.BB} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton8 = ref)} ></CustomButton>\n\t        \t\t</div>\n\t        \t</form>\n\t      \t</div>\n\t    );\n\t}\n};\n\nexport default Hero;\n","import React from 'react';\nimport CustomButton from './customButton';\nimport './index.css';\nimport * as constant from './stringConstants';\n\n\nclass BvB extends React.Component {\n\n\tconstructor() {\n\t\tsuper();\n\n\t\t// submitValue holds the value of clicked button in bvb row\n\t\tthis.state = {\n\t\t\tsubmitValue : ''\n\t\t}\n\t}\n\n\n\thandleClick = ev => {\n\t\tlet mappy = {[constant.SB_U]: this._custombutton, [constant.SB_L_v_I]: this._custombutton2, [constant.SB_v_3]:  this._custombutton3,\n\t\t\t[constant.BB_v_L]: this._custombutton4, [constant.BB_v_O]: this._custombutton5}\n\t\tthis.props.bToggleButtons(ev, mappy)\n\n\t\t// update state of value in parents class bumfuck\n\t\tthis.props.updateBvbState(ev.currentTarget.value)\n\t\t// update state of submitValue in this class\n\t\tthis.setState ({submitValue: ev.currentTarget.value})\n\t\t//this.props.bSendData(this.state.submitValue)\n\t}\n\n\n\tcomponentDidUpdate(props) {\n\t\t// allBvbButtons is a dictionary of BvB row buttons\n\t\tlet allBvbButtons = {[constant.SB_U]: this._custombutton, [constant.SB_L_v_I]: this._custombutton2,\n\t\t\t[constant.SB_v_3]: this._custombutton3, [constant.BB_v_L]: this._custombutton4, [constant.BB_v_O]: this._custombutton5}\n\n\t\tlet sbOptions = {[constant.SB_U]: this._custombutton, [constant.SB_L_v_I]: this._custombutton2,\n\t\t\t[constant.SB_v_3]: this._custombutton3}\n\n\t\tlet bbOptions = {[constant.BB_v_L]: this._custombutton4, [constant.BB_v_O]: this._custombutton5}\n\n\t\t// loop through each button and disable or enable based on what PotType value is\n\t\tif (this.props.potValue === constant.BVB) {\n\t\t\tfor (var value0 in allBvbButtons) {\n\t\t\t\tlet button = allBvbButtons[value0]\n\t\t\t\t// enable button\n\t\t\t\tbutton.enabled()\n\t\t\t}\n\t\t\tif (this.props.heroValue === constant.SB) {\n\t\t\t\t// disable BB buttons\n\t\t\t\tfor (var value1 in bbOptions) {\n\t\t\t\t\tlet button = bbOptions[value1]\n\t\t\t\t\tbutton.disabled()\n\t\t\t\t}\n\t\t\t\t// enable SB buttons\n\t\t\t\tfor (var value2 in sbOptions) {\n\t\t\t\t\tlet button = sbOptions[value2]\n\t\t\t\t\tbutton.enabled()\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.props.heroValue === constant.BB) {\n\t\t\t\t// disable SB buttons\n\t\t\t\tfor (var value3 in sbOptions) {\n\t\t\t\t\tlet button = sbOptions[value3]\n\t\t\t\t\tbutton.disabled()\n\t\t\t\t}\n\t\t\t\t// enable BB buttons\n\t\t\t\tfor (var value4 in bbOptions) {\n\t\t\t\t\tlet button = bbOptions[value4]\n\t\t\t\t\tbutton.enabled()\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\telse if ((this.props.potValue === constant.RFI) || (this.props.potValue === constant.VS_OPEN) || (this.props.potValue === constant.VS_3)) {\n\t\t\tfor (var value5 in allBvbButtons) {\n\t\t\t\tlet button = allBvbButtons[value5]\n\t\t\t\t// disable button\n\t\t\t\tbutton.disabled()\n\t\t\t}\n\t\t}\n\t}\n\n\n\trender() {\n\n\t    return (\n\t      \t<div>\n\t       \t\t<form onSubmit={this.onFormSubmit}>\n\t        \t\t<div className=\"board-row\">\n\t\t\t\t\t\t<CustomButton value={constant.SB_U} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton = ref)} ></CustomButton>\n\t\t\t\t\t\t<CustomButton value={constant.SB_L_v_I} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton2 = ref)} ></CustomButton>\n\t\t\t\t\t\t<CustomButton value={constant.SB_v_3} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton3 = ref)} ></CustomButton>\n\t\t\t\t\t\t<CustomButton value={constant.BB_v_L} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton4 = ref)} ></CustomButton>\n\t\t\t\t\t\t<CustomButton value={constant.BB_v_O} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton5 = ref)} ></CustomButton>\n\t        \t\t</div>\n\t        \t</form>\n\t      </div>\n\t    );\n  \t}\n}\n\nexport default BvB;\n","import React from 'react';\nimport './index.css';\nimport TextField from '@material-ui/core/TextField';\n\n\nclass HoleInput extends React.Component {\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tholeInputValue: \"\",\n         error: false\n\t\t}\n\t}\n\n  \t_handleTextFieldChange = (ev) => {\n  \t\tthis.setState({holeInputValue: ev.target.value});\n\t\t// if hole input value isn't either empty or valid, display error message\n\t\tif (!ev.target.value.match(/^([AKQJakqj2-9]|10)([AKQJakqj2-9]|10)([osOS])$/) && !ev.target.value.match(/^$/)) {\n\t\t\tthis.setState({error: true})\n\t\t}\n\t\telse {\n\t\t\tthis.setState({error: false})\n\t\t}\n      \t// update state of hole input value in parents class bumfuck\n\t\tthis.props.updateHoleState(ev.currentTarget.value)\n  \t}\n\n\trender() {\n\t    return (\n\t    \t<div className = \"holeinput\">\n\t    \t    <form noValidate autoComplete=\"off\">\n     \t\t\t\t<TextField\n\t\t\t\t\t\terror={this.state.error}\n\t\t\t\t\t\tlabel=\"HOLE INPUT\"\n\t\t\t\t\t\tid=\"standard-size-small\"\n\t\t\t\t\t\tdefaultValue=\"\"\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\tonChange={(ev)=>this._handleTextFieldChange(ev)}\n\t\t\t\t\t\t//helperText={this.state.error}\n\t\t\t\t\t/>\n    \t\t\t</form>\n    \t\t</div>\n\t    );\n  \t}\n}\n\nexport default HoleInput;\n","import React from 'react';\nimport './index.css';\nimport IconButton from '@material-ui/core/IconButton';\nimport FunctionsIcon from '@material-ui/icons/Functions';\n\n\nclass Result extends React.Component {\n  render() {\n    return (\n      <>\n        <div className = \"resultField\"> \n          {this.props.finalResult} \n        </div>\n        \n        <div className=\"freqBorder\">\n          <div className=\"bar\">\n          </div>\n        </div>\n      </>\n    )\n  }\n};\n\nexport default Result;","import React from 'react'\n\n\nclass Calculator extends React.Component {\n  state = {\n    firstVal: '',\n    secondVal: '',\n    operator: '',\n    display: '0',\n  }\n\n  componentDidMount() {\n    const { keypressHandler } = this\n    document.addEventListener('keyup', ev => {\n      keypressHandler(ev)\n    })\n  }\n\n  keypressHandler = ev => {\n    const {\n      setNumberValue,\n      setOperatorValue,\n      equalHandler,\n      allClear,\n      deleteChar,\n    } = this\n    const { \n      operator,\n      secondVal,\n    } = this.state\n    const numRegex = /^([0-9]|\\.)*$/g;\n    const opRegex =  /[+|\\-|:|*]/g;\n    const eqRegex =  /(=)/g;\n    const delRegex = /(Backspace|Delete)/g;\n    const acRegex = /(Escape)/g;\n    const key = ev.key\n   \n    const isNumber = !!numRegex.exec(key)\n    const isOperator = !!opRegex.exec(key)\n    const isEqual = !!eqRegex.exec(key)\n    const isDel = !!delRegex.exec(key)\n    const isAc = !!acRegex.exec(key)\n    \n    if (key && isNumber) {\n      setNumberValue(key + '')\n    }\n    \n    if (key && isOperator) {\n      setOperatorValue(key + '')\n    }\n    \n    if (key && isEqual) {\n      equalHandler()\n    }\n    \n    if (key && isDel) {\n      deleteChar()\n    }\n    \n    if (key && isAc) {\n      allClear()\n    }\n  }\n\n  resetState = resetAll => {\n    if (resetAll) {\n      this.setState({\n        firstVal: '',\n        secondVal: '',\n        operator: '',\n        display: '0',\n     })\n    } else {\n      this.setState({\n        firstVal: '',\n        secondVal: '',\n        operator: '',\n     })\n    }\n  } \n  \n  hasPoint = (value) => {\n    return value.indexOf('.') > -1\n  }\n  \n  setNumberValue = value => {\n    const {\n      firstVal,\n      secondVal,\n      operator,\n    } = this.state\n    const { \n      fixNumberString,\n      setDisplay,\n    } = this\n    let total\n    \n    // if point is pressed, check if we already have it in current states\n    if (value === '.') {\n      if (!operator && !this.hasPoint(firstVal)) {      \n        total = fixNumberString(firstVal + value)\n        this.setState({\n          firstVal: total\n        })\n      }\n      if (!!operator && !this.hasPoint(secondVal)) {\n        total = fixNumberString(secondVal + value)\n        this.setState({\n          secondVal: total\n        })\n      }\n      if (total) {\n        setDisplay(total + '')\n      }\n      return\n    }\n    \n    // if input is a number, check if it's first or second number\n    if (!operator) {\n      total = fixNumberString(firstVal + value)\n      this.setState({\n        firstVal: total\n      })\n    } else {\n      total = fixNumberString(secondVal + value)\n      this.setState({\n        secondVal: total\n      })\n    }\n    setDisplay(total + '')\n  }\n  \n  getOverall = () => {\n    const { \n      firstVal,\n      secondVal,\n      operator,\n    } = this.state\n    return firstVal + ' ' + operator + ' ' + secondVal\n  }\n  \n  setDisplay = value => {\n    const { \n      firstVal,\n      secondVal,\n    } = this.state\n    \n    this.setState({\n      display: value,\n    })\n  }\n  \n  getCurrentTargetValue = () => {\n    const {\n      firstVal,\n      secondVal,\n      operator,\n    } = this.state\n    return !operator ? firstVal : secondVal\n  }\n  \n  numberClickHandler = (e) => {\n    const value = e.target.innerHTML\n    if (value) {\n      this.setNumberValue(value)\n    }\n  }\n  \n  setOperatorValue = operatorInput => {\n    const { \n      firstVal,\n      secondVal,\n      operator,\n      display,\n    } = this.state\n    const { \n      fixNumberString,\n      calculate,\n      setDisplay,\n    } = this\n    const fixedNumber = fixNumberString(firstVal, false)\n    \n    if (firstVal && !secondVal) {\n      this.setState({\n        operator: operatorInput,\n        display: fixedNumber,\n      })\n    } else if (firstVal && operator && secondVal) {\n     const total = calculate()\n     this.setState({\n       operator: operatorInput,\n       firstVal: total + '',\n       secondVal: '',\n     })\n     setDisplay(total + '')\n    } else {\n      this.setState({\n        operator: operatorInput,\n        firstVal: fixNumberString(display, false),\n      })\n    }\n  }\n  \n  operatorClickHandler = (e) => {\n    const { setOperatorValue } = this\n    const operatorInput = e.target.innerHTML\n    \n    setOperatorValue(operatorInput)\n  }\n  \n  allClear = () => {\n    this.resetState(true)\n  }\n  \n  deleteChar = () => {\n    const {\n      firstVal,\n      secondVal,\n      operator,\n    } = this.state\n    const opRegex =  /[+|\\-|:|*]/g;\n    \n    if (!operator) {\n      const newVal = firstVal.slice(0, -1)\n      this.setState({\n        firstVal: newVal,\n        display: newVal ? newVal : '0',\n      })\n    } else if (operator && !secondVal) {\n      this.setState({\n        display: firstVal,\n        operator: '',\n      })\n    } else {\n      const newVal = secondVal.slice(0, -1)\n      this.setState({\n        secondVal: newVal,\n        display: newVal ? newVal : '0',\n      })\n    }\n  }\n  \n  removeZeroAtStart = value => {\n    return value.indexOf('0') === 0 ? value.substring(1) : value\n  }\n  \n  fixNumberString = (value, finalize = false) => {\n    // if input has hanging point e.g. '0.'/'1.', add trailing zero\n    // should only run when moving to second value / begin calculation\n    if (finalize && value.indexOf('.') === value.length - 1 && value.length > 1) { \n      return value + '0'\n    }\n    // if value has zero prefix but not a decimal value, e.g. '01'/'03', remove zero\n    if (value.indexOf('0') === 0 && !value.indexOf('0.') === 0) {\n      return value.substring(1)\n    }\n    // if value is a first point input '.', add zero prefix\n    if (value.indexOf('.') === 0 && value.length === 1) {\n      return '0.'\n    }\n    if (!value) {\n      return '0'\n    }\n    return value\n  }\n  \n  calculate = () => {\n    const {\n      firstVal,\n      secondVal,\n      operator,\n    } = this.state\n    const {\n      fixNumberString,\n    } = this\n    \n    const vfirstVal = fixNumberString(firstVal, true)\n    const vsecondVal = fixNumberString(secondVal, true)\n    let total = '0';\n    \n    switch (operator) {\n      case '-' :\n        total = parseFloat(vfirstVal) - parseFloat(vsecondVal)\n        break;\n      case '*':\n        total = parseFloat(vfirstVal) * parseFloat(vsecondVal)\n        break;\n      case ':' :\n        total = parseFloat(vfirstVal) / parseFloat(vsecondVal)\n        break;\n      case '+' :\n      default:\n        total = parseFloat(vfirstVal) + parseFloat(vsecondVal)\n        break;\n    }\n    \n    return total.toLocaleString()\n  }\n  \n  equalHandler = () => {\n    const {\n      firstVal,\n      secondVal,\n      operator,\n    } = this.state\n    const {\n      setDisplay,\n      resetState,\n      calculate,\n    } = this\n    \n    if (firstVal && secondVal && operator) {\n      let total = calculate()\n      setDisplay(total + '')\n      resetState()\n    }\n  }\n  \n  render() {\n    const { \n      display,\n      operator,\n    } = this.state\n    const {\n      operatorClickHandler,\n      numberClickHandler,\n      deleteChar,\n      allClear,\n      equalHandler,\n      getOverall,\n    } = this\n    const activeOperator = name => {\n      return operator === name ? 'active' : ''\n    }\n    return (\n      <div>\n        <div className=\"display\">\n          <p className=\"display-overall\">{ getOverall().trim() }</p>\n          <p className=\"display-text\">{ display }</p>\n        </div>\n        <div className=\"inputs\">\n          <div className=\"column main\">\n            <div className=\"operator\">\n              <div className=\"row\">\n               \n              </div>\n            </div> { /* operator */ }\n            <div className=\"numbers\">\n              <div className=\"row\">\n                <button onClick={numberClickHandler}>7</button>\n                <button onClick={numberClickHandler}>8</button>\n                <button onClick={numberClickHandler}>9</button>\n              </div>\n              <div className=\"row\">\n                <button onClick={numberClickHandler}>4</button>\n                <button onClick={numberClickHandler}>5</button>\n                <button onClick={numberClickHandler}>6</button>\n              </div>\n              <div className=\"row\">\n                <button onClick={numberClickHandler}>1</button>\n                <button onClick={numberClickHandler}>2</button>\n                <button onClick={numberClickHandler}>3</button>\n              </div>\n              <div className=\"row\">\n                <button onClick={numberClickHandler}>.</button>\n                <button onClick={numberClickHandler}>0</button>\n                <button onClick={deleteChar}>C</button>\n              </div>\n            </div> { /* numbers */ }\n          </div> { /* main */ }\n          <div className = \"column sides\">\n              <button \n                className={activeOperator('+')}\n                onClick={operatorClickHandler}>+</button>\n              <button \n                className={activeOperator('-')}\n                onClick={operatorClickHandler}>-</button>\n              <button \n                className={activeOperator(':')}\n                onClick={operatorClickHandler}>:</button>\n              <button \n                className={activeOperator('*')}\n                onClick={operatorClickHandler}>*</button>\n          </div>\n          <div className=\"column sides\">\n            <button className=\"ac\" onClick={allClear}>AC</button>\n            <button className=\"equal\" onClick={equalHandler}>=</button>\n          </div> { /* sides */ }\n        </div> { /* inputs */ }\n      </div>\n    )\n  }\n}\n\nexport default Calculator;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Paper from '@material-ui/core/Paper';\nimport Draggable from 'react-draggable';\nimport IconButton from '@material-ui/core/IconButton';\nimport IsoIcon from '@material-ui/icons/Iso';\nimport Calculator from './calcCode.js'\n\nfunction PaperComponent(props) {\n  return (\n    <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\n      <Paper {...props} />\n    </Draggable>\n  );\n}\n\nexport default function DraggableDialog() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <IconButton style={{color: \"#002984\"}} onClick={handleClickOpen}>\n        <IsoIcon />\n      </IconButton>\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        PaperComponent={PaperComponent}\n        aria-labelledby=\"draggable-dialog-title\"\n        >\n\n        <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\n        </DialogTitle>\n\n        <DialogContent>\n          <Calculator/>          \n        </DialogContent>\n\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\n//import ReactDOM from 'react-dom';\n//import Button from '@material-ui/core/Button';\nimport './index.css';\nimport IconButton from '@material-ui/core/IconButton';\nimport FunctionsIcon from '@material-ui/icons/Functions';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Paper from '@material-ui/core/Paper';\nimport Draggable from 'react-draggable';\nimport DraggableDialog from './dialog.js'\n\n\nclass CalcButton extends React.Component {\n\n\trender() {\n\t\treturn (\n            <>\n                <DraggableDialog></DraggableDialog>\n            </>\n        )\n\t}\n};\n\nexport default CalcButton;","import React from 'react';\nimport SubmitButton from './submitButton';\nimport RefreshButton from './refreshButton';\nimport PotType from './pottype';\nimport StackDepth from './stackDepth';\nimport Hero from './hero';\nimport Villain from './villain';\nimport BvB from './bvb';\nimport HoleInput from './holeinput';\nimport Result from './result';\nimport CalcButton from './calcButton'\n\nexport default class BumFuck extends React.Component {\n\n\tconstructor() {\n        super();\n\n        // submitValue holds the value of clicked button in pottype row\n        this.state = {\n\t\t\tpotValue: '',\n\t\t\tstackValue : '',\n\t\t\theroValue : '',\n\t\t\tvillainValue : '',\n\t\t\tbvbValue : '',\n\t\t\t// hole input value\n\t\t\tholeValue : '',\n\t\t\taction : 'ACTION...',\n        }\n        this.updatePotValue = this.updatePotValue.bind(this);\n        this.updateStackValue = this.updateStackValue.bind(this);\n        this.updateHeroValue = this.updateHeroValue.bind(this);\n        this.updateVillainValue = this.updateVillainValue.bind(this);\n        this.updateBvbValue = this.updateBvbValue.bind(this);\n        this.updateHoleValue = this.updateHoleValue.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n\t// setState forces rerender so buttons update with each click\n   updatePotValue(val) {\n    \tthis.setState ({potValue: val})\n\t}\n\tupdateStackValue(val) {\n    \tthis.setState ({stackValue: val})\n\t}\n\tupdateHeroValue(val) {\n    \tthis.setState ({heroValue: val})\n\t}\n\tupdateVillainValue(val) {\n    \tthis.setState ({villainValue: val})\n\t}\n\tupdateBvbValue(val) {\n    \tthis.setState ({bvbValue: val})\n\t}\n\tupdateHoleValue(val) {\n    \tthis.setState ({holeValue: val})\n\t}\n\n\t// helper function called in every class's handleClick, allowing user to toggle between buttons\n\t// mappy = map of values to buttons (defined in handleclick)\n\t// ev = event state\n\ttoggleButtons(ev, mappy) {\n\t\tfor (var key in mappy) {\n\t\t\tlet button = mappy[key]\n\t\t\tif (key === ev.currentTarget.value) {\n\t\t\t\tbutton.clickedOn()\n\t\t \t}\n\t\t \telse {\n\t\t \t\tbutton.clickedOff()\n\t\t \t}\n\t\t}\n\t}\n\n\n\t// upon submitting, value of action field should change and log of all values selected should appear\n\thandleSubmit() {\n\t\t// also works, just puts the error somewhere else\n\t\tif (!this.state.holeValue.match(/^([AKQJakqj2-9]|10)([AKQJakqj2-9]|10)([osOS])$/)) {\n\t\t\t// throw error message if hole input is invalid\n\t\t\tthis.setState({action: \"Hole Input Invalid\"})\n\t\t}\n\t\telse {\n\t\t\t// display all clicked buttons in console log\n\t\t\tvar final_array = [this.state.potValue, this.state.stackValue, this.state.heroValue,\n\t\t\tthis.state.villainValue, this.state.bvbValue, this.state.holeValue]\n\n\t\t\tconsole.log(final_array)\n\n\t\t\t// TEMP - set output value\n\t\t\tthis.setState ({action: \"RAISE 2.3X\"})\n\t\t}\n\t}\n\n\n\n\trender() {\n\t\treturn (\n\t\t\t// created new div \"final row\" for styling purposes\n\t\t\t<div>\n\t\t\t\t<h5>POT TYPE</h5>\n\t\t\t\t<PotType pToggleButtons={this.toggleButtons} updatePotState={this.updatePotValue}/>\n\n\t\t\t\t<h5>STACK DEPTH</h5>\n\t\t\t\t<StackDepth sToggleButtons={this.toggleButtons} updateStackState={this.updateStackValue} />\n\n\t\t\t\t<h5>HERO</h5>\n\t\t\t\t<Hero hToggleButtons={this.toggleButtons} updateHeroState={this.updateHeroValue} villainValue={this.state.villainValue} potValue={this.state.potValue}/>\n\n\t\t\t\t<h5>VILLAIN</h5>\n\t\t\t\t<Villain vToggleButtons={this.toggleButtons} updateVillainState={this.updateVillainValue} heroValue={this.state.heroValue} potValue={this.state.potValue}/>\n\n\t\t\t\t<h5>BVB</h5>\n\n\t\t\t\t<div className = \"bvbRow\">\n\t\t\t\t\t<BvB bToggleButtons={this.toggleButtons} updateBvbState={this.updateBvbValue} heroValue={this.state.heroValue} potValue={this.state.potValue}/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className = \"finalRow\">\n\t\t\t\t\t<HoleInput potValue={this.state.potValue} updateHoleState={this.updateHoleValue} />\n\t\t\t\t\t<RefreshButton/>\n\t\t\t\t\t<SubmitButton holeInputValue={this.state.holeValue} submitState={this.submitState} handleSubmit={this.handleSubmit}/>\n\t\t\t\t\t<Result finalResult={this.state.action}/>\n\t\t\t\t\t<CalcButton/>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport BumFuck from './bumfuck';\n\nReactDOM.render(<BumFuck />, document.getElementById('pokerApp'));\n"],"sourceRoot":""}