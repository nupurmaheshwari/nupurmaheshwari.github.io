{"version":3,"sources":["submitButton.js","refreshButton.js","customButton.js","stringConstants.js","pottype.js","stackDepth.js","hero.js","villain.js","bvb.js","holeinput.js","result.js","bumfuck.js","index.js"],"names":["SubmitButton","state","color","mystyle","backgroundColor","this","width","Button","value","style","onClick","props","handleSubmit","React","Component","RefreshButton","IconButton","window","location","reload","CustomButton","disableToggle","clickedOn","bind","clickedOff","disabled","enabled","setState","BVB","UTG","MP","LJ","HJ","CO","BU","SB","BB","SB_U","SB_L_v_I","BB_v_L","BB_v_O","PotType","handleClick","ev","mappy","_custombutton","_custombutton2","_custombutton3","constant","_custombutton4","pToggleButtons","updatePotState","currentTarget","submitValue","onSubmit","onFormSubmit","className","ref","StackDepth","_custombutton5","_custombutton6","_custombutton7","sToggleButtons","updateStackState","Hero","_custombutton8","hToggleButtons","updateHeroState","allHeroButtons","firstSixButtons","vsOpenButtons","potValue","value0","value1","value2","vToggleButtons","updateVillainState","allVillainButtons","vs3Buttons","button","heroValue","beforeHero","value4","afterHero","value5","BvB","bToggleButtons","updateBvbState","allBvbButtons","sbOptions","bbOptions","value3","HoleInput","_handleTextFieldChange","holeInputValue","target","updateHoleState","noValidate","autoComplete","TextField","label","id","defaultValue","size","onChange","Result","finalResult","BumFuck","stackValue","villainValue","bvbValue","holeValue","action","updatePotValue","updateStackValue","updateHeroValue","updateVillainValue","updateBvbValue","updateHoleValue","val","key","final_array","console","log","toggleButtons","ReactDOM","render","document","getElementById"],"mappings":"2PAqCeA,G,wDA9BX,aAAc,IAAD,8BACT,gBAEKC,MAAQ,CACZC,MAAO,WAJC,E,qDAWV,IAAMC,EAAU,CACbC,gBAAiBC,KAAKJ,MAAMC,MAC5BI,MAAO,OAGb,OACQ,kBAACC,EAAA,EAAD,CACHC,MAAQ,SACRC,MAASN,EACTO,QAAWL,KAAKM,MAAMC,cAHnB,c,GAnBeC,IAAMC,Y,yBCmClBC,E,kDA7BX,aAAc,IAAD,8BACT,gBAEKd,MAAQ,CACZC,MAAO,WAJC,E,qDAkBb,OAEI,kBAACc,EAAA,EAAD,CAAYP,MAAO,CAACP,MAAO,WAAYQ,QAAS,kBAAMO,OAAOC,SAASC,QAAO,KAC3E,kBAAC,IAAD,W,GAvBkBN,IAAMC,W,OCgDnBM,E,kDA/CX,aAAc,IAAD,8BACT,gBAGKnB,MAAQ,CACZC,MAAO,UACJmB,eAAe,GAEnB,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBACjB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAClB,EAAKE,SAAW,EAAKA,SAASF,KAAd,gBAChB,EAAKG,QAAU,EAAKA,QAAQH,KAAb,gBAXN,E,yDAgBZlB,KAAKsB,SAAS,CAACzB,MAAO,c,kCAItBG,KAAKsB,SAAS,CAACzB,MAAO,c,iCAIpBG,KAAKsB,SAAS,CAACN,eAAe,IAC9BhB,KAAKsB,SAAS,CAACzB,MAAO,c,gCAItBG,KAAKsB,SAAS,CAACN,eAAe,M,+BAMjC,OACQ,kBAACd,EAAA,EAAD,CACHC,MAASH,KAAKM,MAAMH,MACbiB,SAAYpB,KAAKJ,MAAMoB,cAC9BZ,MAAS,CAACL,gBAAiBC,KAAKJ,MAAMC,OACtCQ,QAAWL,KAAKM,MAAMD,SAEzBL,KAAKM,MAAMH,W,GA5CUK,IAAMC,WCPpBc,EAAM,iBAONC,EAAM,MACNC,EAAK,KACLC,EAAK,KACLC,EAAK,KACLC,EAAK,KACLC,EAAK,MACLC,EAAK,KACLC,EAAK,KAcLC,EAAO,cACPC,EAAW,gBAEXC,EAAS,YACTC,EAAS,YCoBPC,E,kDA3Cd,aAAe,IAAD,8BACb,gBASDC,YAAc,SAAAC,GAAO,IAAD,EAEfC,GAAK,mBDpBQ,MCoBY,EAAKC,eAAzB,cDlBY,UCkBgD,EAAKC,gBAAjE,cDnBS,OCmByF,EAAKC,gBAAvG,cAAwHC,EAAe,EAAKC,gBAA5I,GACT,EAAKtC,MAAMuC,eAAeP,EAAIC,GAG9B,EAAKjC,MAAMwC,eAAeR,EAAGS,cAAc5C,OAE3C,EAAKmB,SAAU,CAAC0B,YAAaV,EAAGS,cAAc5C,SAd9C,EAAKP,MAAQ,CACZoD,YAAc,IALF,E,qDAuBJ,IAAD,OAEL,OACG,6BACE,0BAAMC,SAAUjD,KAAKkD,cACpB,yBAAKC,UAAU,aACd,kBAAC,EAAD,CAAchD,MDrCP,MCqC4BE,QAAS,SAACiC,GAAD,OAAQ,EAAKD,YAAYC,IAAKc,IAAO,SAAAA,GAAG,OAAK,EAAKZ,cAAgBY,KAC9G,kBAAC,EAAD,CAAcjD,MDpCH,UCoC4BE,QAAS,SAACiC,GAAD,OAAQ,EAAKD,YAAYC,IAAKc,IAAO,SAAAA,GAAG,OAAK,EAAKX,eAAiBW,KACnH,kBAAC,EAAD,CAAcjD,MDtCN,OCsC2BE,QAAS,SAACiC,GAAD,OAAQ,EAAKD,YAAYC,IAAKc,IAAO,SAAAA,GAAG,OAAK,EAAKV,eAAiBU,KAC/G,kBAAC,EAAD,CAAcjD,MAAOwC,EAActC,QAAS,SAACiC,GAAD,OAAQ,EAAKD,YAAYC,IAAKc,IAAO,SAAAA,GAAG,OAAK,EAAKR,eAAiBQ,Y,GAlCrG5C,IAAMC,WC6Cb4C,E,kDA5Cd,aAAe,IAAD,8BACb,gBASDhB,YAAc,SAAAC,GAAO,IAAD,EACfC,GAAK,mBFDQ,QECY,EAAKC,eAAzB,cFAQ,QEAgD,EAAKC,gBAA7D,cFCQ,QEDsF,EAAKC,gBAAnG,cFEQ,QEF2H,EAAKE,gBAAxI,cFGQ,QEFA,EAAKU,gBADb,cFIQ,QEHqC,EAAKC,gBADlD,cFKQ,SEJ2E,EAAKC,gBADxF,GAET,EAAKlD,MAAMmD,eAAenB,EAAIC,GAG9B,EAAKjC,MAAMoD,iBAAiBpB,EAAGS,cAAc5C,OAE7C,EAAKmB,SAAU,CAAC0B,YAAaV,EAAGS,cAAc5C,SAd9C,EAAKP,MAAQ,CACZoD,YAAc,IALF,E,qDAuBJ,IAAD,OAEL,OACG,6BACE,0BAAMC,SAAUjD,KAAKkD,cACpB,yBAAKC,UAAU,aACd,kBAAC,EAAD,CAAchD,MFnBP,QEmB4BE,QAAS,SAACiC,GAAD,OAAQ,EAAKD,YAAYC,IAAKc,IAAO,SAAAA,GAAG,OAAK,EAAKZ,cAAgBY,KAC9G,kBAAC,EAAD,CAAcjD,MFnBP,QEmB4BE,QAAS,SAACiC,GAAD,OAAQ,EAAKD,YAAYC,IAAKc,IAAO,SAAAA,GAAG,OAAK,EAAKX,eAAiBW,KAC/G,kBAAC,EAAD,CAAcjD,MFnBP,QEmB4BE,QAAS,SAACiC,GAAD,OAAQ,EAAKD,YAAYC,IAAKc,IAAO,SAAAA,GAAG,OAAK,EAAKV,eAAiBU,KAC/G,kBAAC,EAAD,CAAcjD,MFnBP,QEmB4BE,QAAS,SAACiC,GAAD,OAAQ,EAAKD,YAAYC,IAAKc,IAAO,SAAAA,GAAG,OAAK,EAAKR,eAAiBQ,KAC/G,kBAAC,EAAD,CAAcjD,MFnBP,QEmB4BE,QAAS,SAACiC,GAAD,OAAQ,EAAKD,YAAYC,IAAKc,IAAO,SAAAA,GAAG,OAAK,EAAKE,eAAiBF,KAC/G,kBAAC,EAAD,CAAcjD,MFnBP,QEmB4BE,QAAS,SAACiC,GAAD,OAAQ,EAAKD,YAAYC,IAAKc,IAAO,SAAAA,GAAG,OAAK,EAAKG,eAAiBH,KAC/G,kBAAC,EAAD,CAAcjD,MFnBP,SEmB4BE,QAAS,SAACiC,GAAD,OAAQ,EAAKD,YAAYC,IAAKc,IAAO,SAAAA,GAAG,OAAK,EAAKI,eAAiBJ,Y,GArClG5C,IAAMC,W,QC6FhBkD,E,kDA3Fd,aAAe,IAAD,8BACb,gBASDtB,YAAc,SAAAC,GAAO,IAAD,EACfC,GAAK,mBAAKI,EAAe,EAAKH,eAAzB,cAAyCG,EAAc,EAAKF,gBAA5D,cAA6EE,EAAe,EAAKD,gBAAjG,cAAkHC,EAAc,EAAKC,gBAArI,cACPD,EAAc,EAAKW,gBADZ,cAC6BX,EAAc,EAAKY,gBADhD,cACiEZ,EAAe,EAAKa,gBADrF,cACsGb,EAAc,EAAKiB,gBADzH,GAET,EAAKtD,MAAMuD,eAAevB,EAAIC,GAG9B,EAAKjC,MAAMwD,gBAAgBxB,EAAGS,cAAc5C,OAE5C,EAAKmB,SAAU,CAAC0B,YAAaV,EAAGS,cAAc5C,SAd9C,EAAKP,MAAQ,CACZoD,YAAc,IALF,E,+DAuBK1C,GAAQ,IAAD,EAErByD,GAAc,mBAAKpB,EAAe3C,KAAKwC,eAAzB,cAAyCG,EAAc3C,KAAKyC,gBAA5D,cAA6EE,EAAe3C,KAAK0C,gBAAjG,cAAkHC,EAAc3C,KAAK4C,gBAArI,cAChBD,EAAc3C,KAAKsD,gBADH,cACoBX,EAAc3C,KAAKuD,gBADvC,cACwDZ,EAAe3C,KAAKwD,gBAD5E,cAC6Fb,EAAc3C,KAAK4D,gBADhH,GAGdI,EAAe,eAAOD,UACnBC,EAAe,UACfA,EAAe,GAEtB,IAAIC,EAAa,eAAOF,GAIxB,UAHOE,EAAa,IHxCH,QG2CZjE,KAAKM,MAAM4D,UH1CE,SG0C6BlE,KAAKM,MAAM4D,SAKzD,IAAK,IAAIC,KAHTnE,KAAKwD,eAAepC,WACpBpB,KAAK4D,eAAexC,WAED4C,EAAiB,CACtBA,EAAgBG,GACtB9C,eAGJ,GAAIrB,KAAKM,MAAM4D,WAAavB,EAAc,CAC9C,IAAK,IAAIyB,KAAUJ,EAAiB,CACtBA,EAAgBI,GAEtBhD,WAGRpB,KAAKwD,eAAenC,UACpBrB,KAAK4D,eAAevC,eAEhB,GH7DgB,YG6DZrB,KAAKM,MAAM4D,SAInB,IAAK,IAAIG,KAFTrE,KAAKwC,cAAcpB,WAEA6C,EAAe,CACpBA,EAAcI,GACpBhD,a,+BAOA,IAAD,OAEL,OACG,6BACE,0BAAM4B,SAAUjD,KAAKkD,cACpB,yBAAKC,UAAU,aACd,kBAAC,EAAD,CAAchD,MAAOwC,EAActC,QAAS,SAACiC,GAAD,OAAQ,EAAKD,YAAYC,IAAKc,IAAO,SAAAA,GAAG,OAAK,EAAKZ,cAAgBY,KAC9G,kBAAC,EAAD,CAAcjD,MAAOwC,EAAatC,QAAS,SAACiC,GAAD,OAAQ,EAAKD,YAAYC,IAAKc,IAAO,SAAAA,GAAG,OAAK,EAAKX,eAAiBW,KAC9G,kBAAC,EAAD,CAAcjD,MAAOwC,EAAatC,QAAS,SAACiC,GAAD,OAAQ,EAAKD,YAAYC,IAAKc,IAAO,SAAAA,GAAG,OAAK,EAAKV,eAAiBU,KAC9G,kBAAC,EAAD,CAAcjD,MAAOwC,EAAatC,QAAS,SAACiC,GAAD,OAAQ,EAAKD,YAAYC,IAAKc,IAAO,SAAAA,GAAG,OAAK,EAAKR,eAAiBQ,KAC9G,kBAAC,EAAD,CAAcjD,MAAOwC,EAAatC,QAAS,SAACiC,GAAD,OAAQ,EAAKD,YAAYC,IAAKc,IAAO,SAAAA,GAAG,OAAK,EAAKE,eAAiBF,KAC9G,kBAAC,EAAD,CAAcjD,MAAOwC,EAAatC,QAAS,SAACiC,GAAD,OAAQ,EAAKD,YAAYC,IAAKc,IAAO,SAAAA,GAAG,OAAK,EAAKG,eAAiBH,KAC9G,kBAAC,EAAD,CAAcjD,MAAOwC,EAAatC,QAAS,SAACiC,GAAD,OAAQ,EAAKD,YAAYC,IAAKc,IAAO,SAAAA,GAAG,OAAK,EAAKI,eAAiBJ,KAC9G,kBAAC,EAAD,CAAcjD,MAAOwC,EAAatC,QAAS,SAACiC,GAAD,OAAQ,EAAKD,YAAYC,IAAKc,IAAO,SAAAA,GAAG,OAAK,EAAKQ,eAAiBR,Y,GApFvG5C,IAAMC,WC2IVkD,E,kDA1Id,aAAe,IAAD,8BACb,gBASDtB,YAAc,SAAAC,GAAO,IAAD,EACfC,GAAK,mBAAKI,EAAe,EAAKH,eAAzB,cAAyCG,EAAc,EAAKF,gBAA5D,cAA6EE,EAAe,EAAKD,gBAAjG,cAAkHC,EAAc,EAAKC,gBAArI,cACPD,EAAc,EAAKW,gBADZ,cAC6BX,EAAc,EAAKY,gBADhD,cACiEZ,EAAe,EAAKa,gBADrF,cACsGb,EAAc,EAAKiB,gBADzH,GAGT,EAAKtD,MAAMgE,eAAehC,EAAIC,GAG9B,EAAKjC,MAAMiE,mBAAmBjC,EAAGS,cAAc5C,OAE/C,EAAKmB,SAAU,CAAC0B,YAAaV,EAAGS,cAAc5C,SAf9C,EAAKP,MAAQ,CACZoD,YAAc,IALF,E,+DAwBK1C,GAAQ,IAAD,EAErBkE,GAAiB,mBAAK7B,EAAe3C,KAAKwC,eAAzB,cAAyCG,EAAc3C,KAAKyC,gBAA5D,cAA6EE,EAAe3C,KAAK0C,gBAAjG,cAAkHC,EAAc3C,KAAK4C,gBAArI,cACnBD,EAAc3C,KAAKsD,gBADA,cACiBX,EAAc3C,KAAKuD,gBADpC,cACqDZ,EAAe3C,KAAKwD,gBADzE,cAC0Fb,EAAc3C,KAAK4D,gBAD7G,GAGjBK,EAAa,eAAOO,UACjBP,EAAa,UACbA,EAAa,GAEpB,IAAIQ,EAAU,eAAOD,GAKrB,UAJOC,EAAU,IJxCA,QI4CZzE,KAAKM,MAAM4D,UAA+BlE,KAAKM,MAAM4D,WAAavB,EACtE,IAAK,IAAIwB,KAAUK,EAAmB,CACrC,IAAIE,EAASF,EAAkBL,GAE/BO,EAAOtD,WAEPsD,EAAOvD,kBAGJ,GJnDgB,YImDZnB,KAAKM,MAAM4D,SAA+B,CAMlD,IAAK,IAAIE,KAHTpE,KAAKwD,eAAepC,WACpBpB,KAAK4D,eAAexC,WAED6C,EAAe,CACpBA,EAAcG,GACpB/C,UAKR,GAA6B,KAAzBrB,KAAKM,MAAMqE,UAAkB,CAEhC,IAAIC,GAAa,EAEjB,IAAK,IAAIP,KAAUJ,EAAe,CAE7BI,IAAWrE,KAAKM,MAAMqE,YAAYC,GAAa,GACnD,IAAIF,EAAST,EAAcI,IAER,IAAfO,EACHF,EAAOrD,UAIPqD,EAAOtD,kBAON,GJtFa,SIsFTpB,KAAKM,MAAM4D,SAA4B,CAI/C,IAAK,IAAIW,KAFT7E,KAAKwC,cAAcpB,WAEAqD,EAAY,CACjBA,EAAWI,GACjBxD,UAIR,GAA6B,KAAzBrB,KAAKM,MAAMqE,UAAkB,CAEhC,IAAIG,GAAY,EAIhB,IAAK,IAAIC,KAFL/E,KAAKM,MAAMqE,YAAchC,IAAemC,GAAY,GAErCL,EAAY,CAC9B,IAAIC,EAASD,EAAWM,IAEN,IAAdD,EACHJ,EAAOtD,WAIPsD,EAAOrD,UAGJ0D,IAAW/E,KAAKM,MAAMqE,YAAYG,GAAY,Q,+BAQ5C,IAAD,OAEL,OACG,6BACE,0BAAM7B,SAAUjD,KAAKkD,cACpB,yBAAKC,UAAU,aACd,kBAAC,EAAD,CAAchD,MAAOwC,EAActC,QAAS,SAACiC,GAAD,OAAQ,EAAKD,YAAYC,IAAKc,IAAO,SAAAA,GAAG,OAAK,EAAKZ,cAAgBY,KAC9G,kBAAC,EAAD,CAAcjD,MAAOwC,EAAatC,QAAS,SAACiC,GAAD,OAAQ,EAAKD,YAAYC,IAAKc,IAAO,SAAAA,GAAG,OAAK,EAAKX,eAAiBW,KAC9G,kBAAC,EAAD,CAAcjD,MAAOwC,EAAatC,QAAS,SAACiC,GAAD,OAAQ,EAAKD,YAAYC,IAAKc,IAAO,SAAAA,GAAG,OAAK,EAAKV,eAAiBU,KAC9G,kBAAC,EAAD,CAAcjD,MAAOwC,EAAatC,QAAS,SAACiC,GAAD,OAAQ,EAAKD,YAAYC,IAAKc,IAAO,SAAAA,GAAG,OAAK,EAAKR,eAAiBQ,KAC9G,kBAAC,EAAD,CAAcjD,MAAOwC,EAAatC,QAAS,SAACiC,GAAD,OAAQ,EAAKD,YAAYC,IAAKc,IAAO,SAAAA,GAAG,OAAK,EAAKE,eAAiBF,KAC9G,kBAAC,EAAD,CAAcjD,MAAOwC,EAAatC,QAAS,SAACiC,GAAD,OAAQ,EAAKD,YAAYC,IAAKc,IAAO,SAAAA,GAAG,OAAK,EAAKG,eAAiBH,KAC9G,kBAAC,EAAD,CAAcjD,MAAOwC,EAAatC,QAAS,SAACiC,GAAD,OAAQ,EAAKD,YAAYC,IAAKc,IAAO,SAAAA,GAAG,OAAK,EAAKI,eAAiBJ,KAC9G,kBAAC,EAAD,CAAcjD,MAAOwC,EAAatC,QAAS,SAACiC,GAAD,OAAQ,EAAKD,YAAYC,IAAKc,IAAO,SAAAA,GAAG,OAAK,EAAKQ,eAAiBR,Y,GAlIvG5C,IAAMC,WCmGVuE,E,kDAjGd,aAAe,IAAD,8BACb,gBASD3C,YAAc,SAAAC,GAAO,IAAD,EACfC,GAAK,mBAAKI,EAAgB,EAAKH,eAA1B,cAA0CG,EAAoB,EAAKF,gBAAnE,cLWW,UKX4F,EAAKC,gBAA5G,cACPC,EAAkB,EAAKC,gBADhB,cACiCD,EAAkB,EAAKW,gBADxD,GAET,EAAKhD,MAAM2E,eAAe3C,EAAIC,GAG9B,EAAKjC,MAAM4E,eAAe5C,EAAGS,cAAc5C,OAE3C,EAAKmB,SAAU,CAAC0B,YAAaV,EAAGS,cAAc5C,SAd9C,EAAKP,MAAQ,CACZoD,YAAc,IALF,E,+DAuBK1C,GAAQ,IAAD,MAErB6E,GAAa,mBAAKxC,EAAgB3C,KAAKwC,eAA1B,cAA0CG,EAAoB3C,KAAKyC,gBAAnE,cLHG,UKIAzC,KAAK0C,gBADR,cACyBC,EAAkB3C,KAAK4C,gBADhD,cACiED,EAAkB3C,KAAKsD,gBADxF,GAGb8B,GAAS,mBAAKzC,EAAgB3C,KAAKwC,eAA1B,cAA0CG,EAAoB3C,KAAKyC,gBAAnE,cLNO,UKOAzC,KAAK0C,gBADZ,GAGT2C,GAAS,mBAAK1C,EAAkB3C,KAAK4C,gBAA5B,cAA6CD,EAAkB3C,KAAKsD,gBAApE,GAGb,GAAItD,KAAKM,MAAM4D,WAAavB,EAAc,CACzC,IAAK,IAAIwB,KAAUgB,EAAe,CACpBA,EAAchB,GAEpB9C,UAER,GAAIrB,KAAKM,MAAMqE,YAAchC,EAAa,CAEzC,IAAK,IAAIyB,KAAUiB,EAAW,CAChBA,EAAUjB,GAChBhD,WAIR,IAAK,IAAIiD,KAAUe,EAAW,CAChBA,EAAUf,GAChBhD,WAGT,GAAIrB,KAAKM,MAAMqE,YAAchC,EAAa,CAEzC,IAAK,IAAI2C,KAAUF,EAAW,CAChBA,EAAUE,GAChBlE,WAIR,IAAK,IAAIyD,KAAUQ,EAAW,CAChBA,EAAUR,GAChBxD,iBAKL,GL3EY,QK2EPrB,KAAKM,MAAM4D,ULzEA,YKyE+BlE,KAAKM,MAAM4D,UL1E7C,SK0EgFlE,KAAKM,MAAM4D,SAC5G,IAAK,IAAIa,KAAUI,EAAe,CACpBA,EAAcJ,GAEpB3D,c,+BAMA,IAAD,OAEL,OACG,6BACE,0BAAM6B,SAAUjD,KAAKkD,cACpB,yBAAKC,UAAU,aACd,kBAAC,EAAD,CAAchD,MAAOwC,EAAetC,QAAS,SAACiC,GAAD,OAAQ,EAAKD,YAAYC,IAAKc,IAAO,SAAAA,GAAG,OAAK,EAAKZ,cAAgBY,KAC/G,kBAAC,EAAD,CAAcjD,MAAOwC,EAAmBtC,QAAS,SAACiC,GAAD,OAAQ,EAAKD,YAAYC,IAAKc,IAAO,SAAAA,GAAG,OAAK,EAAKX,eAAiBW,KACpH,kBAAC,EAAD,CAAcjD,MLhEJ,UKgE4BE,QAAS,SAACiC,GAAD,OAAQ,EAAKD,YAAYC,IAAKc,IAAO,SAAAA,GAAG,OAAK,EAAKV,eAAiBU,KAClH,kBAAC,EAAD,CAAcjD,MAAOwC,EAAiBtC,QAAS,SAACiC,GAAD,OAAQ,EAAKD,YAAYC,IAAKc,IAAO,SAAAA,GAAG,OAAK,EAAKR,eAAiBQ,KAClH,kBAAC,EAAD,CAAcjD,MAAOwC,EAAiBtC,QAAS,SAACiC,GAAD,OAAQ,EAAKD,YAAYC,IAAKc,IAAO,SAAAA,GAAG,OAAK,EAAKE,eAAiBF,Y,GA1F5G5C,IAAMC,W,QCgCT8E,E,kDA9Bd,aAAe,IAAD,8BACb,gBAQCC,uBAAyB,SAAClD,GACzB,EAAKhB,SAAS,CAAEmE,eAAgBnD,EAAGoD,OAAOvF,QAG5C,EAAKG,MAAMqF,gBAAgBrD,EAAGS,cAAc5C,QAV5C,EAAKP,MAAQ,CACZ6F,eAAgB,IAJJ,E,qDAiBJ,IAAD,OAEL,OACC,yBAAKtC,UAAY,aACb,0BAAMyC,YAAU,EAACC,aAAa,OAC9B,kBAACC,EAAA,EAAD,CAAWC,MAAM,aAAaC,GAAG,sBAAsBC,aAAa,GAAGC,KAAK,QAAQC,SAAU,SAAC7D,GAAD,OAAM,EAAKkD,uBAAuBlD,Y,GAxBlH9B,IAAMC,W,iBCgCf2F,E,uKApBX,OACI,oCAEI,yBAAKjD,UAAY,eAAjB,IAAiCnD,KAAKM,MAAM+F,YAA5C,KAGA,yBAAKlD,UAAU,cACb,yBAAKA,UAAU,SAGjB,kBAACxC,EAAA,EAAD,CAAYP,MAAO,CAACP,MAAO,WAAYQ,QAAS,kBAAMO,OAAOC,SAASC,QAAO,KAC3E,kBAAC,IAAD,Y,GAvBON,IAAMC,WCWN6F,E,kDAEpB,aAAe,IAAD,8BACP,gBAGK1G,MAAQ,CACZsE,SAAU,GACVqC,WAAa,GACb5B,UAAY,GACZ6B,aAAe,GACfC,SAAW,GACXC,UAAY,GACZC,OAAS,aAEV,EAAKC,eAAiB,EAAKA,eAAe1F,KAApB,gBACtB,EAAK2F,iBAAmB,EAAKA,iBAAiB3F,KAAtB,gBACxB,EAAK4F,gBAAkB,EAAKA,gBAAgB5F,KAArB,gBACvB,EAAK6F,mBAAqB,EAAKA,mBAAmB7F,KAAxB,gBAC1B,EAAK8F,eAAiB,EAAKA,eAAe9F,KAApB,gBACtB,EAAK+F,gBAAkB,EAAKA,gBAAgB/F,KAArB,gBACvB,EAAKX,aAAe,EAAKA,aAAaW,KAAlB,gBAnBb,E,2DAuBIgG,GACdlH,KAAKsB,SAAU,CAAC4C,SAAUgD,M,uCAEbA,GACblH,KAAKsB,SAAU,CAACiF,WAAYW,M,sCAEhBA,GACZlH,KAAKsB,SAAU,CAACqD,UAAWuC,M,yCAEZA,GACflH,KAAKsB,SAAU,CAACkF,aAAcU,M,qCAEnBA,GACXlH,KAAKsB,SAAU,CAACmF,SAAUS,M,sCAEdA,GACZlH,KAAKsB,SAAU,CAACoF,UAAWQ,M,oCAMjB5E,EAAIC,GACjB,IAAK,IAAI4E,KAAO5E,EAAO,CACtB,IAAImC,EAASnC,EAAM4E,GACfA,IAAQ7E,EAAGS,cAAc5C,MAC5BuE,EAAOzD,YAGNyD,EAAOvD,gB,qCAOV,IAAIiG,EAAc,CAACpH,KAAKJ,MAAMsE,SAAUlE,KAAKJ,MAAM2G,WAAYvG,KAAKJ,MAAM+E,UAC1E3E,KAAKJ,MAAM4G,aAAcxG,KAAKJ,MAAM6G,SAAUzG,KAAKJ,MAAM8G,WAEzDW,QAAQC,IAAIF,GAEZpH,KAAKsB,SAAU,CAACqF,OAAQ,iB,+BAKxB,OAIC,6BACC,wCACA,kBAAC,EAAD,CAAS9D,eAAgB7C,KAAKuH,cAAezE,eAAgB9C,KAAK4G,iBAElE,2CACA,kBAAC,EAAD,CAAYnD,eAAgBzD,KAAKuH,cAAe7D,iBAAkB1D,KAAK6G,mBAEvE,oCACA,kBAAC,EAAD,CAAMhD,eAAgB7D,KAAKuH,cAAezD,gBAAiB9D,KAAK8G,gBAAiBN,aAAcxG,KAAKJ,MAAM4G,aAActC,SAAUlE,KAAKJ,MAAMsE,WAE7I,uCACA,kBAAC,EAAD,CAASI,eAAgBtE,KAAKuH,cAAehD,mBAAoBvE,KAAK+G,mBAAoBpC,UAAW3E,KAAKJ,MAAM+E,UAAWT,SAAUlE,KAAKJ,MAAMsE,WAEhJ,mCAEA,yBAAKf,UAAY,UAChB,kBAAC,EAAD,CAAK8B,eAAgBjF,KAAKuH,cAAerC,eAAgBlF,KAAKgH,eAAgBrC,UAAW3E,KAAKJ,MAAM+E,UAAWT,SAAUlE,KAAKJ,MAAMsE,YAGrI,yBAAKf,UAAY,YAChB,kBAAC,EAAD,CAAWe,SAAUlE,KAAKJ,MAAMsE,SAAUyB,gBAAiB3F,KAAKiH,kBAChE,kBAAC,EAAD,CAAc1G,aAAcP,KAAKO,eACjC,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAQ8F,YAAarG,KAAKJ,MAAM+G,e,GAlGAnG,IAAMC,WCb3C+G,IAASC,OAAO,kBAAC,EAAD,MAAaC,SAASC,eAAe,W","file":"static/js/main.ae3e922c.chunk.js","sourcesContent":["import React from 'react';\n//import ReactDOM from 'react-dom';\nimport Button from '@material-ui/core/Button';\nimport './index.css';\n\nclass SubmitButton extends React.Component {\n\n    constructor(){\n        super();\n\n        this.state = {\n        \tcolor: '#002984',\n        }    \n    }\n\n\n    // display individual button\n  \trender() {\n       const mystyle = {\n          backgroundColor: this.state.color,\n          width: \"15%\",\n        };\n\n  \t\treturn (\n            <Button \n      \t\t\tvalue = \"Submit\"\n      \t\t\tstyle = {mystyle}\n      \t\t\tonClick = {this.props.handleSubmit}\n      \t\t\t>\n\t  \t\tSubmit\n  \t\t\t</Button> \n        )\n  \t }\n\n\n}\n\nexport default SubmitButton;","import React from 'react';\n//import ReactDOM from 'react-dom';\n// import Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport './index.css';\n\n\n\nclass RefreshButton extends React.Component {\n\n    constructor(){\n        super();\n\n        this.state = {\n        \tcolor: '#002984',\n        }    \n    }\n\n\n    // display individual button\n  \trender() {\n\n      //state not being used but kept for future possible use\n       // const mystyle = {\n       //    backgroundColor: this.state.color,\n       //    width: \"10%\",\n       //  };\n\n  \t\treturn (\n\n        <IconButton style={{color: \"#002984\"}} onClick={() => window.location.reload(false)}>\n          <RefreshIcon />\n        </IconButton>\n        )\n  \t }\n\n\n}\n\nexport default RefreshButton;","import React from 'react';\n//import ReactDOM from 'react-dom';\nimport Button from '@material-ui/core/Button';\nimport './index.css';\n\n          // main: '#DCDCDC',\n          // dark: '#808080',\n\nclass CustomButton extends React.Component {\n\n    constructor(){\n        super();\n\n        // state of\n        this.state = {\n        \tcolor: '#DCDCDC',\n            disableToggle: false,        }\n\n        this.clickedOn = this.clickedOn.bind(this)\n        this.clickedOff = this.clickedOff.bind(this)\n        this.disabled = this.disabled.bind(this)\n        this.enabled = this.enabled.bind(this)\n    }\n\n\n   \tclickedOff() {\n   \t\tthis.setState({color: '#DCDCDC'})\n   \t}\n\n   \tclickedOn() {\n   \t\tthis.setState({color: '#808080'})\n   \t}\n\n    disabled() {\n       this.setState({disableToggle: true})\n       this.setState({color: '#DCDCDC'})\n    }\n\n    enabled() {\n       this.setState({disableToggle: false})\n    }\n\n\n    // display individual button\n  \trender() {\n  \t\treturn (\n            <Button \n      \t\t\tvalue = {this.props.value} \n                disabled = {this.state.disableToggle}\n      \t\t\tstyle = {{backgroundColor: this.state.color}} \n      \t\t\tonClick = {this.props.onClick}\n      \t\t\t>\n\t  \t\t{this.props.value}\n  \t\t\t</Button> )\n  \t}\n}\n\nexport default CustomButton;","// PotType button constants\nexport const BVB = \"Blind vs Blind\";\nexport const RFI = 'RFI';\nexport const VS_3 = 'Vs 3';\nexport const VS_OPEN = 'Vs Open';\n\n\n// Villain & Hero button constants\nexport const UTG = \"UTG\";\nexport const MP = 'MP';\nexport const LJ = 'LJ';\nexport const HJ = 'HJ';\nexport const CO = \"CO\"\nexport const BU = 'BTN';\nexport const SB = 'SB';\nexport const BB = 'BB';\n\n\n// StackDepth button constants\nexport const _10 = \"10-15\";\nexport const _16 = '16-20';\nexport const _21 = '21-25';\nexport const _26 = '26-35';\nexport const _36 = \"36-50\"\nexport const _51 = '51-80';\nexport const _81 = '81-100';\n\n\n// BvB button constants\nexport const SB_U = \"SB Unopened\";\nexport const SB_L_v_I = \"SB Limp v ISO\";\nexport const SB_v_3 = \"SB v 3!\";\nexport const BB_v_L = \"BB v Limp\";\nexport const BB_v_O = \"BB v Open\";\n\n\n","import React from 'react';\n//import ReactDOM from 'react-dom';\nimport CustomButton from './customButton';\nimport './index.css';\n//question: should this variable rlly be called constant??\nimport * as constant from './stringConstants';\n\n\nclass PotType extends React.Component {\n\n\tconstructor() {\n\t\tsuper();\n\n\t\t// submitValue holds the value of clicked button in PotType row\n\t\tthis.state = {\n\t\t\tsubmitValue : ''\n\t\t}\n\t}\n\n\n\thandleClick = ev => { \n\t\t// map values (string constants) to appropriate button\n\t\tlet mappy = {[constant.RFI]: this._custombutton, [constant.VS_OPEN]: this._custombutton2, [constant.VS_3]: this._custombutton3, [constant.BVB]: this._custombutton4}\n\t\tthis.props.pToggleButtons(ev, mappy)\n\n\t\t// update state of value in parents class bumfuck\n\t\tthis.props.updatePotState(ev.currentTarget.value)\n\t\t// update state of submitValue in this class\n\t\tthis.setState ({submitValue: ev.currentTarget.value})\n\t\t\n\t}\n\n\n\trender() {\n\n\t    return (\n\t      \t<div>\n\t       \t\t<form onSubmit={this.onFormSubmit}>\n\t        \t\t<div className=\"board-row\">\n\t        \t\t\t<CustomButton value={constant.RFI} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton = ref)} ></CustomButton>\n\t       \t\t\t\t<CustomButton value={constant.VS_OPEN} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton2 = ref)} ></CustomButton>\n\t       \t\t\t\t<CustomButton value={constant.VS_3}onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton3 = ref)} ></CustomButton>\n\t       \t\t\t\t<CustomButton value={constant.BVB} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton4 = ref)} ></CustomButton>\n\t        \t\t</div>\n\t        \t</form>\n\t      </div>\n\t    );\n  \t\t}\n}\n\n\n\n\nexport default PotType;\n","import React from 'react';\n//import ReactDOM from 'react-dom';\nimport CustomButton from './customButton';\nimport './index.css';\nimport * as constant from './stringConstants';\n\n\nclass StackDepth extends React.Component {\n\n\tconstructor() {\n\t\tsuper();\n\n\t\t// submitValue holds the value of clicked button in stackDepth row\n\t\tthis.state = {\n\t\t\tsubmitValue : '',\n\t\t}\n\t}\n\n\n\thandleClick = ev => { \n\t\tlet mappy = {[constant._10]: this._custombutton, [constant._16]: this._custombutton2, [constant._21]:  this._custombutton3, [constant._26]: this._custombutton4, \n\t\t\t[constant._36]: this._custombutton5, [constant._51]: this._custombutton6, [constant._81]:  this._custombutton7}\n\t\tthis.props.sToggleButtons(ev, mappy)\n\n\t\t// update state of value in parents class bumfuck\n\t\tthis.props.updateStackState(ev.currentTarget.value)\n\t\t// update state of submitValue in this class (for use in form submission)\n\t\tthis.setState ({submitValue: ev.currentTarget.value})\n\t\t//this.props.sSendData(this.state.submitValue\n\t}\n\n\n\trender() {\n\n\t    return (\n\t      \t<div>\n\t       \t\t<form onSubmit={this.onFormSubmit}>\n\t        \t\t<div className=\"board-row\">\n\t\t\t        \t<CustomButton value={constant._10} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant._16} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton2 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant._21} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton3 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant._26} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton4 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant._36} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton5 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant._51} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton6 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant._81} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton7 = ref)} ></CustomButton>\n\t        \t\t</div>\n\t        \t</form>\n\t     \t</div>\n\t    );\n\t}\n}\n\n\nexport default StackDepth;\n","import React from 'react';\n//import ReactDOM from 'react-dom';\nimport CustomButton from './customButton';\nimport './index.css';\nimport * as constant from './stringConstants';\n\n\nclass Hero extends React.Component {\n\n\tconstructor() {\n\t\tsuper();\n\n\t\t// submitValue holds the value of clicked button in hero row\n\t\tthis.state = {\n\t\t\tsubmitValue : ''\n\t\t}\n\t}\n\n\n\thandleClick = ev => { \n\t\tlet mappy = {[constant.UTG]: this._custombutton, [constant.MP]: this._custombutton2, [constant.LJ]:  this._custombutton3, [constant.HJ]: this._custombutton4, \n\t\t\t[constant.CO]: this._custombutton5, [constant.BU]: this._custombutton6, [constant.SB]:  this._custombutton7, [constant.BB]: this._custombutton8}\n\t\tthis.props.hToggleButtons(ev, mappy)\n\n\t\t// update state of value in parents class bumfuck\n\t\tthis.props.updateHeroState(ev.currentTarget.value)\n\t\t// update state of submitValue in this class (for use in form submission)\n\t\tthis.setState ({submitValue: ev.currentTarget.value})\n\t\t//this.props.hSendData(this.state.submitValue)\n\t}\n\n\n\tcomponentDidUpdate(props) {\n\t\t// allHeroButtons is a dict of Hero row buttons \n\t\tlet allHeroButtons = {[constant.UTG]: this._custombutton, [constant.MP]: this._custombutton2, [constant.LJ]:  this._custombutton3, [constant.HJ]: this._custombutton4, \n\t\t\t[constant.CO]: this._custombutton5, [constant.BU]: this._custombutton6, [constant.SB]:  this._custombutton7, [constant.BB]: this._custombutton8}\n\t\t\n\t\tlet firstSixButtons = {...allHeroButtons} \n\t\tdelete firstSixButtons[constant.SB]\n\t\tdelete firstSixButtons[constant.BB]\n\n\t\tlet vsOpenButtons = {...allHeroButtons}\n\t\tdelete vsOpenButtons[constant.UTG]\n\n\t\t// loop through each button and disable or enable based on what PotType value is\n\t\tif ((this.props.potValue === constant.RFI) || (this.props.potValue === constant.VS_3)) {\n\t\t\t// disable last two buttons when RFI & vs_3 clicked\n\t\t\tthis._custombutton7.disabled()\n\t\t\tthis._custombutton8.disabled()\n\t\t\t// enable all other button\n\t\t\tfor (var value0 in firstSixButtons) {\n\t\t\t\tlet button = firstSixButtons[value0]\n\t\t\t\tbutton.enabled()\n\t\t\t}\n\t\t}\n\t\telse if (this.props.potValue === constant.BVB) {\n\t\t\tfor (var value1 in firstSixButtons) {\n\t\t\t\tlet button = firstSixButtons[value1]\n\t\t\t\t// disable first six buttons when bvb clicked\n\t\t\t\tbutton.disabled()\n\t\t\t}\n\t\t\t// enable other buttons\n\t\t\tthis._custombutton7.enabled()\n\t\t\tthis._custombutton8.enabled()\n\t\t}\n\t\telse if (this.props.potValue === constant.VS_OPEN) {\n\t\t\t// disable first button when vs open clicked\n\t\t\tthis._custombutton.disabled()\n\t\t\t// enable all other buttons\n\t\t\tfor (var value2 in vsOpenButtons) {\n\t\t\t\tlet button = vsOpenButtons[value2]\n\t\t\t\tbutton.enabled()\n\n\t\t\t}\n\t\t}\n\t}\n\n\n\trender() {\n\n\t    return (\n\t      \t<div>\n\t       \t\t<form onSubmit={this.onFormSubmit}>\n\t        \t\t<div className=\"board-row\">\n\t\t\t        \t<CustomButton value={constant.UTG} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.MP} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton2 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.LJ} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton3 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.HJ} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton4 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.CO} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton5 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.BU} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton6 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.SB} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton7 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.BB} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton8 = ref)} ></CustomButton>\n\t\t\t\t\t</div>\n\t        \t</form>\n\t      \t</div>\n\t    );\n\t}\n}\n\n\nexport default Hero;\n","import React from 'react';\n//import ReactDOM from 'react-dom';\nimport CustomButton from './customButton';\nimport './index.css';\nimport * as constant from './stringConstants';\n\n\nclass Hero extends React.Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\t// submitValue holds the value of clicked button in villain row\n\t\tthis.state = {\n\t\t\tsubmitValue : ''\n\t\t}\n\t}\n\n\n\thandleClick = ev => { \n\t\tlet mappy = {[constant.UTG]: this._custombutton, [constant.MP]: this._custombutton2, [constant.LJ]:  this._custombutton3, [constant.HJ]: this._custombutton4, \n\t\t\t[constant.CO]: this._custombutton5, [constant.BU]: this._custombutton6, [constant.SB]:  this._custombutton7, [constant.BB]: this._custombutton8}\n\n\t\tthis.props.vToggleButtons(ev, mappy)\n\n\t\t// update state of value in parents class bumfuck\n\t\tthis.props.updateVillainState(ev.currentTarget.value)\n\t\t// update state of submitValue in this class (for use in form submission)\n\t\tthis.setState ({submitValue: ev.currentTarget.value})\n\t\t//this.props.vSendData(this.state.submitValue)\n\t}\n\n\n\tcomponentDidUpdate(props) {\n\t\t// allVillainButtons is a dictionary of villain row buttons \n\t\tlet allVillainButtons = {[constant.UTG]: this._custombutton, [constant.MP]: this._custombutton2, [constant.LJ]:  this._custombutton3, [constant.HJ]: this._custombutton4, \n\t\t\t[constant.CO]: this._custombutton5, [constant.BU]: this._custombutton6, [constant.SB]:  this._custombutton7, [constant.BB]: this._custombutton8}\n\n\t\tlet vsOpenButtons = {...allVillainButtons} \n\t\tdelete vsOpenButtons[constant.SB]\n\t\tdelete vsOpenButtons[constant.BB]\n\n\t\tlet vs3Buttons = {...allVillainButtons}\n\t\tdelete vs3Buttons[constant.UTG]\n\t\t\n\n\t\t// loop through each button and disable or enable based on what PotType value is\n\t\tif ((this.props.potValue === constant.RFI) || (this.props.potValue === constant.BVB)) {\n\t\t\tfor (var value0 in allVillainButtons) {\n\t\t\t\tlet button = allVillainButtons[value0]\n\t\t\t\t// disable button\n\t\t\t\tbutton.disabled()\n\t\t\t\t// unclick button\n\t\t\t\tbutton.clickedOff()\n\t\t\t}\n\t\t}\n\t\telse if (this.props.potValue === constant.VS_OPEN) {\n\t\t\t// initial grey out\n\t\t\t// disable last two buttons when vs open clicked\n\t\t\tthis._custombutton7.disabled()\n\t\t\tthis._custombutton8.disabled()\n\t\t\t// enable all other buttons \n\t\t\tfor (var value1 in vsOpenButtons) {\n\t\t\t\tlet button = vsOpenButtons[value1]\n\t\t\t\tbutton.enabled()\n\t\t\t}\n\n\t\t\t// grey out based on VP<HP rule\n\t\t\t// check if hero button has been selected\n\t\t\tif (this.props.heroValue !== '') {\n\t\t\t\t// variable to check if VP button is < HP button\n\t\t\t\tlet beforeHero = true\n\t\t\t\t// loop through vsOpenButtons dictionary\n\t\t\t\tfor (var value2 in vsOpenButtons) {\n\t\t\t\t\t// if villain key is equal to clicked hero button, change variable to false\n\t\t\t\t\tif (value2 === this.props.heroValue) {beforeHero = false}\n\t\t\t\t\tlet button = vsOpenButtons[value2]\n\t\t\t\t\t//if VP button<HP button, and enable button\n\t\t\t\t\tif (beforeHero === true) {\n\t\t\t\t\t\tbutton.enabled()\n\t\t\t\t\t}\n\t\t\t\t\t// if VP button>=HP button, disable button\n\t\t\t\t\telse {\n\t\t\t\t\t\tbutton.disabled()\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t}\n\t\telse if (this.props.potValue === constant.VS_3) {\n\t\t\t// disable first button when vs open clicked\n\t\t\tthis._custombutton.disabled()\n\t\t\t// enable all other buttons \n\t\t\tfor (var value4 in vs3Buttons) {\n\t\t\t\tlet button = vs3Buttons[value4]\n\t\t\t\tbutton.enabled()\n\t\t\t}\n\t\t\t// grey out based on HP<VP rule\n\t\t\t// check if hero button has been selected\n\t\t\tif (this.props.heroValue !== '') {\n\t\t\t\t// variable to check if VP button is > HP button\n\t\t\t\tlet afterHero = true\n\t\t\t\t// if clicked hero button is equal to UTG change variable to false\n\t\t\t\tif (this.props.heroValue === constant.UTG) {afterHero = false}\n\t\t\t\t// loop through allButtons dictionary\n\t\t\t\tfor (var value5 in vs3Buttons) {\n\t\t\t\t\tlet button = vs3Buttons[value5]\n\t\t\t\t\t// if HP button>VP button, enable button\n\t\t\t\t\tif (afterHero === true) {\n\t\t\t\t\t\tbutton.disabled()\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t//if HP button<=VP button, enable button\n\t\t\t\t\t\tbutton.enabled()\n\t\t\t\t\t}\n\t\t\t\t\t// if villain key is equal to clicked hero button, change variable to false\n\t\t\t\t\tif (value5 === this.props.heroValue) {afterHero = false}\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\trender() {\n\n\t    return (\n\t      \t<div>\n\t       \t\t<form onSubmit={this.onFormSubmit}>\n\t        \t\t<div className=\"board-row\">\n\t\t\t        \t<CustomButton value={constant.UTG} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.MP} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton2 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.LJ} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton3 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.HJ} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton4 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.CO} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton5 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.BU} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton6 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.SB} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton7 = ref)} ></CustomButton>\n\t\t\t       \t\t<CustomButton value={constant.BB} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton8 = ref)} ></CustomButton>\n\t        \t\t</div>\n\t        \t</form>\n\t      \t</div>\n\t    );\n\t}\n}\n\n\nexport default Hero;\n","import React from 'react';\n//import ReactDOM from 'react-dom';\nimport CustomButton from './customButton';\nimport './index.css';\nimport * as constant from './stringConstants';\n\n\nclass BvB extends React.Component {\n\n\tconstructor() {\n\t\tsuper();\n\n\t\t// submitValue holds the value of clicked button in bvb row\n\t\tthis.state = {\n\t\t\tsubmitValue : ''\n\t\t}\n\t}\n\n\n\thandleClick = ev => { \n\t\tlet mappy = {[constant.SB_U]: this._custombutton, [constant.SB_L_v_I]: this._custombutton2, [constant.SB_v_3]:  this._custombutton3, \n\t\t\t[constant.BB_v_L]: this._custombutton4, [constant.BB_v_O]: this._custombutton5}\n\t\tthis.props.bToggleButtons(ev, mappy)\n\n\t\t// update state of value in parents class bumfuck\n\t\tthis.props.updateBvbState(ev.currentTarget.value)\n\t\t// update state of submitValue in this class\n\t\tthis.setState ({submitValue: ev.currentTarget.value})\n\t\t//this.props.bSendData(this.state.submitValue)\n\t}\n\n\n\tcomponentDidUpdate(props) {\n\t\t// allBvbButtons is a dictionary of BvB row buttons \n\t\tlet allBvbButtons = {[constant.SB_U]: this._custombutton, [constant.SB_L_v_I]: this._custombutton2, \n\t\t\t[constant.SB_v_3]: this._custombutton3, [constant.BB_v_L]: this._custombutton4, [constant.BB_v_O]: this._custombutton5}\n\n\t\tlet sbOptions = {[constant.SB_U]: this._custombutton, [constant.SB_L_v_I]: this._custombutton2, \n\t\t\t[constant.SB_v_3]: this._custombutton3}\n\n\t\tlet bbOptions = {[constant.BB_v_L]: this._custombutton4, [constant.BB_v_O]: this._custombutton5}\n\n\t\t// loop through each button and disable or enable based on what PotType value is\n\t\tif (this.props.potValue === constant.BVB) {\n\t\t\tfor (var value0 in allBvbButtons) {\n\t\t\t\tlet button = allBvbButtons[value0]\n\t\t\t\t// enable button\n\t\t\t\tbutton.enabled()\n\t\t\t}\n\t\t\tif (this.props.heroValue === constant.SB) {\n\t\t\t\t// disable BB buttons\n\t\t\t\tfor (var value1 in bbOptions) {\n\t\t\t\t\tlet button = bbOptions[value1]\n\t\t\t\t\tbutton.disabled()\n\t\t\t\t} \n\n\t\t\t\t// enable SB buttons\n\t\t\t\tfor (var value2 in sbOptions) {\n\t\t\t\t\tlet button = sbOptions[value2]\n\t\t\t\t\tbutton.enabled()\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.props.heroValue === constant.BB) {\n\t\t\t\t// disable SB buttons \n\t\t\t\tfor (var value3 in sbOptions) {\n\t\t\t\t\tlet button = sbOptions[value3]\n\t\t\t\t\tbutton.disabled()\n\t\t\t\t}\n\n\t\t\t\t// enable BB buttons\n\t\t\t\tfor (var value4 in bbOptions) {\n\t\t\t\t\tlet button = bbOptions[value4]\n\t\t\t\t\tbutton.enabled()\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\telse if ((this.props.potValue === constant.RFI) || (this.props.potValue === constant.VS_OPEN) || (this.props.potValue === constant.VS_3)) {\n\t\t\tfor (var value5 in allBvbButtons) {\n\t\t\t\tlet button = allBvbButtons[value5]\n\t\t\t\t// disable button\n\t\t\t\tbutton.disabled()\n\t\t\t}\n\t\t}\n\t}\n\n\n\trender() {\n\n\t    return (\n\t      \t<div>\n\t       \t\t<form onSubmit={this.onFormSubmit}>\n\t        \t\t<div className=\"board-row\">\n\t        \t\t\t<CustomButton value={constant.SB_U} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton = ref)} ></CustomButton>\n\t       \t\t\t\t<CustomButton value={constant.SB_L_v_I} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton2 = ref)} ></CustomButton>\n\t       \t\t\t\t<CustomButton value={constant.SB_v_3} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton3 = ref)} ></CustomButton>\n\t       \t\t\t\t<CustomButton value={constant.BB_v_L} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton4 = ref)} ></CustomButton>\n\t       \t\t\t\t<CustomButton value={constant.BB_v_O} onClick={(ev) => this.handleClick(ev)} ref = {ref => (this._custombutton5 = ref)} ></CustomButton>\n\t        \t\t</div>\n\t        \t</form>\n\t      </div>\n\t    );\n  \t}\n}\n\n\nexport default BvB;\n","import React from 'react';\n//import ReactDOM from 'react-dom';\n//import CustomButton from './customButton';\nimport './index.css';\nimport TextField from '@material-ui/core/TextField';\n\n\nclass HoleInput extends React.Component {\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tholeInputValue: \"\"\n\t\t}\n\t}\n\n\n  \t_handleTextFieldChange = (ev) => {\n  \t\tthis.setState({ holeInputValue: ev.target.value });\n\n        // update state of value in parents class bumfuck\n\t\tthis.props.updateHoleState(ev.currentTarget.value)\n  \t}\n\n\n\trender() {\n\t\t//className={classes.root}\n\t    return (\n\t    \t<div className = \"holeinput\">\n\t    \t    <form noValidate autoComplete=\"off\">\n     \t\t\t\t <TextField label=\"hole input\" id=\"standard-size-small\" defaultValue=\"\" size=\"small\" onChange={(ev)=>this._handleTextFieldChange(ev)}/>\n    \t\t\t</form>\n    \t\t</div>\n\t    );\n  \t\t}\n}\n\n\nexport default HoleInput;\n","import React from 'react';\n//import ReactDOM from 'react-dom';\n//import Button from '@material-ui/core/Button';\nimport './index.css';\nimport IconButton from '@material-ui/core/IconButton';\nimport FunctionsIcon from '@material-ui/icons/Functions';\n\nclass Result extends React.Component {\n\n    // constructor(){\n    //     super();\n\n    //     // this.state = {\n    //     //   text: 'action...'\n    //     // }    \n    // }\n\n  \trender() {\n\n  \t\treturn (\n        <>\n\n            <div className = \"resultField\"> {this.props.finalResult} </div>\n\n\n            <div className=\"freqBorder\">\n              <div className=\"bar\"></div>\n            </div>\n\n            <IconButton style={{color: \"#002984\"}} onClick={() => window.location.reload(false)}>\n              <FunctionsIcon />\n            </IconButton>\n        </>\n        )\n  \t }\n\n\n}\n\nexport default Result;","import React from 'react';\n//import ReactDOM from 'react-dom';\n//import Button from '@material-ui/core/Button';\n//import CustomButton from './customButton';\nimport SubmitButton from './submitButton';\nimport RefreshButton from './refreshButton';\n\n\nimport PotType from './pottype';\nimport StackDepth from './stackDepth';\nimport Hero from './hero';\nimport Villain from './villain';\nimport BvB from './bvb';\nimport HoleInput from './holeinput';\nimport Result from './result';\n\n\n\nexport default class BumFuck extends React.Component {\n\n\tconstructor() {\n        super();\n\n        // submitValue holds the value of clicked button in pottype row\n        this.state = {\n        \tpotValue: '',   \n        \tstackValue : '',\n        \theroValue : '',\n        \tvillainValue : '',\n        \tbvbValue : '',\n        \tholeValue : '',\n        \taction : 'action...',\n        }\n        this.updatePotValue = this.updatePotValue.bind(this); \n        this.updateStackValue = this.updateStackValue.bind(this);\n        this.updateHeroValue = this.updateHeroValue.bind(this);\n        this.updateVillainValue = this.updateVillainValue.bind(this);\n        this.updateBvbValue = this.updateBvbValue.bind(this);\n        this.updateHoleValue = this.updateHoleValue.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    // setState forces rerender so buttons update with each click\n    updatePotValue(val) {\n    \tthis.setState ({potValue: val})\t\n\t}\n\tupdateStackValue(val) {\n    \tthis.setState ({stackValue: val})\t\n\t}\n\tupdateHeroValue(val) {\n    \tthis.setState ({heroValue: val})\t\n\t}\n\tupdateVillainValue(val) {\n    \tthis.setState ({villainValue: val})\t\n\t}\n\tupdateBvbValue(val) {\n    \tthis.setState ({bvbValue: val})\t\n\t}\n\tupdateHoleValue(val) {\n    \tthis.setState ({holeValue: val})\t\n\t}\n\n\t// helper function called in every class's handleClick, allowing user to toggle between buttons \n\t// mappy = map of values to buttons (defined in handleclick)\n\t// ev = event state \n\ttoggleButtons(ev, mappy) {\n\t\tfor (var key in mappy) {\n\t\t\tlet button = mappy[key]\n\t\t\tif (key === ev.currentTarget.value) {\n\t\t\t\tbutton.clickedOn()\n\t\t \t} \n\t\t \telse {\n\t\t \t\tbutton.clickedOff()\n\t\t \t}\n\t\t}\t\n\t}\n\n\n\thandleSubmit() {\n\t\tvar final_array = [this.state.potValue, this.state.stackValue, this.state.heroValue, \n\t\tthis.state.villainValue, this.state.bvbValue, this.state.holeValue]\n\t\t\n\t\tconsole.log(final_array)\n\n\t\tthis.setState ({action: \"Raise 2.3x\"})\n\t}\n\n\n\trender() {\n\t\treturn (\n\t\t\t// potValue = {this.state.value} is passing in the value of the selected potType button\n\t\t\t// created new div \"final row\" for styling purposes\n\n\t\t\t<div>\n\t\t\t\t<h5>POT TYPE</h5>\n\t\t\t\t<PotType pToggleButtons={this.toggleButtons} updatePotState={this.updatePotValue}/>\n\n\t\t\t\t<h5>STACK DEPTH</h5>\n\t\t\t\t<StackDepth sToggleButtons={this.toggleButtons} updateStackState={this.updateStackValue} />\n\t\t\t\t\n\t\t\t\t<h5>HERO</h5>\n\t\t\t\t<Hero hToggleButtons={this.toggleButtons} updateHeroState={this.updateHeroValue} villainValue={this.state.villainValue} potValue={this.state.potValue}/>\n\t\t\t\t\n\t\t\t\t<h5>VILLAIN</h5>\n\t\t\t\t<Villain vToggleButtons={this.toggleButtons} updateVillainState={this.updateVillainValue} heroValue={this.state.heroValue} potValue={this.state.potValue}/>\n\t\t\t\t\n\t\t\t\t<h5>BVB</h5>\n\n\t\t\t\t<div className = \"bvbRow\">\n\t\t\t\t\t<BvB bToggleButtons={this.toggleButtons} updateBvbState={this.updateBvbValue} heroValue={this.state.heroValue} potValue={this.state.potValue}/>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<div className = \"finalRow\">\n\t\t\t\t\t<HoleInput potValue={this.state.potValue} updateHoleState={this.updateHoleValue}/> \n\t\t\t\t\t<SubmitButton handleSubmit={this.handleSubmit}/>\n\t\t\t\t\t<RefreshButton/>\n\t\t\t\t\t<Result finalResult={this.state.action}/>\n\t\t\t\t</div>\n\n\n\t\t\t</div>\n\t\t);\n\t}\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport BumFuck from './bumfuck';\n\n\nReactDOM.render(<BumFuck />, document.getElementById('fuck'))\n"],"sourceRoot":""}